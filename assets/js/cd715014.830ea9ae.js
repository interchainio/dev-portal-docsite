"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[80582],{15680:(e,n,a)=>{a.d(n,{xA:()=>c,yg:()=>m});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,m=d["".concat(l,".").concat(u)]||d[u]||g[u]||o;return a?t.createElement(m,i(i({ref:n},c),{},{components:a})):t.createElement(m,i({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},22502:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=a(58168),r=(a(96540),a(15680));const o={title:"IBC-Go v5 to v6",sidebar_label:"IBC-Go v5 to v6",sidebar_position:7,slug:"/migrations/v5-to-v6"},i="Migrating from ibc-go v5 to v6",s={unversionedId:"migrations/v5-to-v6",id:"version-v7.8.x/migrations/v5-to-v6",title:"IBC-Go v5 to v6",description:"This document is intended to highlight significant changes which may require more information than presented in the CHANGELOG.",source:"@site/ibc-go_versioned_docs/version-v7.8.x/05-migrations/07-v5-to-v6.md",sourceDirName:"05-migrations",slug:"/migrations/v5-to-v6",permalink:"/dev-portal-docsite/ibc-go/v7.8.x/migrations/v5-to-v6",draft:!1,tags:[],version:"v7.8.x",sidebarPosition:7,frontMatter:{title:"IBC-Go v5 to v6",sidebar_label:"IBC-Go v5 to v6",sidebar_position:7,slug:"/migrations/v5-to-v6"},sidebar:"defaultSidebar",previous:{title:"IBC-Go v4 to v5",permalink:"/dev-portal-docsite/ibc-go/v7.8.x/migrations/v4-to-v5"},next:{title:"IBC-Go v6 to v7",permalink:"/dev-portal-docsite/ibc-go/v7.8.x/migrations/v6-to-v7"}},l={},p=[{value:"Chains",id:"chains",level:2},{value:"Upgrade proposal",id:"upgrade-proposal",level:3},{value:"IBC Apps",id:"ibc-apps",level:2},{value:"ICS27 - Interchain Accounts",id:"ics27---interchain-accounts",level:3},{value:"Controller APIs",id:"controller-apis",level:4},{value:"Host params",id:"host-params",level:4},{value:"API breaking changes",id:"api-breaking-changes",level:4},{value:"ICS29 - <code>NewKeeper</code> API change",id:"ics29---newkeeper-api-change",level:3},{value:"ICS20 - <code>SendTransfer</code> is no longer exported",id:"ics20---sendtransfer-is-no-longer-exported",level:3},{value:"ICS04 - <code>SendPacket</code> API change",id:"ics04---sendpacket-api-change",level:3},{value:"IBC testing package",id:"ibc-testing-package",level:3},{value:"Relayers",id:"relayers",level:2},{value:"IBC Light Clients",id:"ibc-light-clients",level:2}],c={toc:p},d="wrapper";function g(e){let{components:n,...o}=e;return(0,r.yg)(d,(0,t.A)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"migrating-from-ibc-go-v5-to-v6"},"Migrating from ibc-go v5 to v6"),(0,r.yg)("p",null,"This document is intended to highlight significant changes which may require more information than presented in the CHANGELOG.\nAny changes that must be done by a user of ibc-go should be documented here."),(0,r.yg)("p",null,"There are four sections based on the four potential user groups of this document:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Chains"),(0,r.yg)("li",{parentName:"ul"},"IBC Apps"),(0,r.yg)("li",{parentName:"ul"},"Relayers"),(0,r.yg)("li",{parentName:"ul"},"IBC Light Clients")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")," ibc-go supports golang semantic versioning and therefore all imports must be updated to bump the version number on major releases."),(0,r.yg)("h2",{id:"chains"},"Chains"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"ibc-go/v6")," release introduces a new set of migrations for ",(0,r.yg)("inlineCode",{parentName:"p"},"27-interchain-accounts"),". Ownership of ICS27 channel capabilities is transferred from ICS27 authentication modules and will now reside with the ICS27 controller submodule moving forward."),(0,r.yg)("p",null,"For chains which contain a custom authentication module using the ICS27 controller submodule this requires a migration function to be included in the chain upgrade handler. A subsequent migration handler is run automatically, asserting the ownership of ICS27 channel capabilities has been transferred successfully."),(0,r.yg)("p",null,"This migration is not required for chains which ",(0,r.yg)("em",{parentName:"p"},"do not")," contain a custom authentication module using the ICS27 controller submodule."),(0,r.yg)("p",null,"This migration facilitates the addition of the ICS27 controller submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," which provides a standardised approach to integrating existing forms of authentication such as ",(0,r.yg)("inlineCode",{parentName:"p"},"x/gov")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"x/group")," provided by the Cosmos SDK."),(0,r.yg)("p",null,"For more information please refer to ",(0,r.yg)("a",{parentName:"p",href:"/ibc-go/architecture/adr-009-v6-ics27-msgserver"},"ADR 009"),"."),(0,r.yg)("h3",{id:"upgrade-proposal"},"Upgrade proposal"),(0,r.yg)("p",null,"Please refer to ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/pull/2383"},"PR #2383")," for integrating the ICS27 channel capability migration logic or follow the steps outlined below:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Add the upgrade migration logic to chain distribution. This may be, for example, maintained under a package ",(0,r.yg)("inlineCode",{parentName:"li"},"app/upgrades/v6"),".")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},'package v6\n\nimport (\n    "github.com/cosmos/cosmos-sdk/codec"\n    storetypes "github.com/cosmos/cosmos-sdk/store/types"\n    sdk "github.com/cosmos/cosmos-sdk/types"\n    "github.com/cosmos/cosmos-sdk/types/module"\n    capabilitykeeper "github.com/cosmos/cosmos-sdk/x/capability/keeper"\n    upgradetypes "github.com/cosmos/cosmos-sdk/x/upgrade/types"\n\n    v6 "github.com/cosmos/ibc-go/v6/modules/apps/27-interchain-accounts/controller/migrations/v6"\n)\n\nconst (\n    UpgradeName = "v6"\n)\n\nfunc CreateUpgradeHandler(\n    mm *module.Manager,\n    configurator module.Configurator,\n    cdc codec.BinaryCodec,\n    capabilityStoreKey *storetypes.KVStoreKey,\n    capabilityKeeper *capabilitykeeper.Keeper,\n    moduleName string,\n) upgradetypes.UpgradeHandler {\n    return func(ctx sdk.Context, _ upgradetypes.Plan, vm module.VersionMap) (module.VersionMap, error) {\n        if err := v6.MigrateICS27ChannelCapability(ctx, cdc, capabilityStoreKey, capabilityKeeper, moduleName); err != nil {\n            return nil, err\n        }\n\n        return mm.RunMigrations(ctx, configurator, vm)\n    }\n}\n')),(0,r.yg)("ol",{start:2},(0,r.yg)("li",{parentName:"ol"},"Set the upgrade handler in ",(0,r.yg)("inlineCode",{parentName:"li"},"app.go"),". The ",(0,r.yg)("inlineCode",{parentName:"li"},"moduleName")," parameter refers to the authentication module's ",(0,r.yg)("inlineCode",{parentName:"li"},"ScopedKeeper")," name. This is the name provided upon instantiation in ",(0,r.yg)("inlineCode",{parentName:"li"},"app.go")," via the ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/blob/v0.46.1/x/capability/keeper/keeper.go#L70"},(0,r.yg)("inlineCode",{parentName:"a"},"x/capability")," keeper ",(0,r.yg)("inlineCode",{parentName:"a"},"ScopeToModule(moduleName string)"))," method. ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/cosmos/ibc-go/blob/v5.0.0/testing/simapp/app.go#L304"},"See here for an example in ",(0,r.yg)("inlineCode",{parentName:"a"},"simapp")),".")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"app.UpgradeKeeper.SetUpgradeHandler(\n    v6.UpgradeName,\n    v6.CreateUpgradeHandler(\n        app.mm,\n        app.configurator,\n        app.appCodec,\n        app.keys[capabilitytypes.ModuleName],\n        app.CapabilityKeeper,\n        >>>> moduleName <<<<,\n    ),\n)\n")),(0,r.yg)("h2",{id:"ibc-apps"},"IBC Apps"),(0,r.yg)("h3",{id:"ics27---interchain-accounts"},"ICS27 - Interchain Accounts"),(0,r.yg)("h4",{id:"controller-apis"},"Controller APIs"),(0,r.yg)("p",null,"In previous releases of ibc-go, chain developers integrating the ICS27 interchain accounts controller functionality were expected to create a custom ",(0,r.yg)("inlineCode",{parentName:"p"},"Base Application")," referred to as an authentication module, see the section ",(0,r.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/v7.8.x/apps/interchain-accounts/auth-modules"},"Building an authentication module")," from the documentation."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"Base Application")," was intended to be composed with the ICS27 controller submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"Keeper")," and facilitate many forms of message authentication depending on a chain's particular use case."),(0,r.yg)("p",null,"Prior to ibc-go v6 the controller submodule exposed only these two functions (to which we will refer as the legacy APIs):"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/cosmos/ibc-go/blob/v5.0.0/modules/apps/27-interchain-accounts/controller/keeper/account.go#L19"},(0,r.yg)("inlineCode",{parentName:"a"},"RegisterInterchainAccount"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/cosmos/ibc-go/blob/v5.0.0/modules/apps/27-interchain-accounts/controller/keeper/relay.go#L18"},(0,r.yg)("inlineCode",{parentName:"a"},"SendTx")))),(0,r.yg)("p",null,"However, these functions have now been deprecated in favour of the new controller submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," and will be removed in later releases."),(0,r.yg)("p",null,"Both APIs remain functional and maintain backwards compatibility in ibc-go v6, however consumers of these APIs are now recommended to follow the message passing paradigm outlined in Cosmos SDK ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-031-msg-service.md"},"ADR 031")," and ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/docs/architecture/adr-033-protobuf-inter-module-comm.md"},"ADR 033"),". This is facilitated by the Cosmos SDK ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/baseapp/msg_service_router.go#L17"},(0,r.yg)("inlineCode",{parentName:"a"},"MsgServiceRouter"))," and chain developers creating custom application logic can now omit the ICS27 controller submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"Keeper")," from their module and instead depend on message routing."),(0,r.yg)("p",null,"Depending on the use case, developers of custom authentication modules face one of three scenarios:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"auth-module-decision-tree.png",src:a(38165).A,width:"458",height:"455"})),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"My authentication module needs to access IBC packet callbacks")),(0,r.yg)("p",null,"Application developers that wish to consume IBC packet callbacks and react upon packet acknowledgements ",(0,r.yg)("strong",{parentName:"p"},"must")," continue using the controller submodule's legacy APIs. The authentication modules will not need a ",(0,r.yg)("inlineCode",{parentName:"p"},"ScopedKeeper")," anymore, though, because the channel capability will be claimed by the controller submodule. For example, given an Interchain Accounts authentication module keeper ",(0,r.yg)("inlineCode",{parentName:"p"},"ICAAuthKeeper"),", the authentication module's ",(0,r.yg)("inlineCode",{parentName:"p"},"ScopedKeeper")," (",(0,r.yg)("inlineCode",{parentName:"p"},"scopedICAAuthKeeper"),") is not needed anymore and can be removed for the argument list of the keeper constructor function, as shown here:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"app.ICAAuthKeeper = icaauthkeeper.NewKeeper(\n    appCodec,\n    keys[icaauthtypes.StoreKey],\n    app.ICAControllerKeeper,\n-   scopedICAAuthKeeper,\n)\n")),(0,r.yg)("p",null,"Please note that the authentication module's ",(0,r.yg)("inlineCode",{parentName:"p"},"ScopedKeeper")," name is still needed as part of the channel capability migration described in section ",(0,r.yg)("a",{parentName:"p",href:"#upgrade-proposal"},"Upgrade proposal")," above. Therefore the authentication module's ",(0,r.yg)("inlineCode",{parentName:"p"},"ScopedKeeper")," cannot be completely removed from the chain code until the migration has run."),(0,r.yg)("p",null,"In the future, the use of the legacy APIs for accessing packet callbacks will be replaced by IBC Actor Callbacks (see ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/pull/1976"},"ADR 008")," for more details) and it will also be possible to access them with the ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServiceRouter"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"My authentication module does not need access to IBC packet callbacks")),(0,r.yg)("p",null,"The authentication module can migrate from using the legacy APIs and it can be composed instead with the ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServiceRouter"),", so that the authentication module is able to pass messages to the controller submodule's ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," to register interchain accounts and send packets to the interchain account. For example, given an Interchain Accounts authentication module keeper ",(0,r.yg)("inlineCode",{parentName:"p"},"ICAAuthKeeper"),", the ICS27 controller submodule keeper (",(0,r.yg)("inlineCode",{parentName:"p"},"ICAControllerKeeper"),") and authentication module scoped keeper (",(0,r.yg)("inlineCode",{parentName:"p"},"scopedICAAuthKeeper"),") are not needed anymore and can be replaced with the ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServiceRouter"),", as shown here:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"app.ICAAuthKeeper = icaauthkeeper.NewKeeper(\n    appCodec,\n    keys[icaauthtypes.StoreKey],\n-   app.ICAControllerKeeper,\n-   scopedICAAuthKeeper,\n+   app.MsgServiceRouter(),\n)\n")),(0,r.yg)("p",null,"In your authentication module you can route messages to the controller submodule's ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," instead of using the legacy APIs. For example, for registering an interchain account:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"- if err := keeper.icaControllerKeeper.RegisterInterchainAccount(\n-    ctx,\n-    connectionID,\n-    owner.String(),\n-    version,\n- ); err != nil {\n-    return err\n- }\n+ msg := controllertypes.NewMsgRegisterInterchainAccount(\n+    connectionID,\n+    owner.String(),\n+    version,\n+ )\n+ handler := keeper.msgRouter.Handler(msg)\n+ res, err := handler(ctx, msg)\n+ if err != nil {\n+    return err\n+ }\n")),(0,r.yg)("p",null,"where ",(0,r.yg)("inlineCode",{parentName:"p"},"controllertypes")," is an import alias for ",(0,r.yg)("inlineCode",{parentName:"p"},'"github.com/cosmos/ibc-go/v6/modules/apps/27-interchain-accounts/controller/types"'),"."),(0,r.yg)("p",null,"In addition, in this use case the authentication module does not need to implement the ",(0,r.yg)("inlineCode",{parentName:"p"},"IBCModule")," interface anymore."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"I do not need a custom authentication module anymore")),(0,r.yg)("p",null,"If your authentication module does not have any extra functionality compared to the default authentication module added in ibc-go v6 (the ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer"),"), or if you can use a generic authentication module, such as the ",(0,r.yg)("inlineCode",{parentName:"p"},"x/auth"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"x/gov")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"x/group")," modules from the Cosmos SDK (v0.46 and later), then you can remove your authentication module completely and use instead the gRPC endpoints of the ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," or the CLI added in ibc-go v6."),(0,r.yg)("p",null,"Please remember that the authentication module's ",(0,r.yg)("inlineCode",{parentName:"p"},"ScopedKeeper")," name is still needed as part of the channel capability migration described in section ",(0,r.yg)("a",{parentName:"p",href:"#upgrade-proposal"},"Upgrade proposal")," above."),(0,r.yg)("h4",{id:"host-params"},"Host params"),(0,r.yg)("p",null,"The ICS27 host submodule default params have been updated to include the ",(0,r.yg)("inlineCode",{parentName:"p"},"AllowAllHostMsgs")," wildcard ",(0,r.yg)("inlineCode",{parentName:"p"},"*"),".\nThis enables execution of any ",(0,r.yg)("inlineCode",{parentName:"p"},"sdk.Msg")," type for ICS27 registered on the host chain ",(0,r.yg)("inlineCode",{parentName:"p"},"InterfaceRegistry"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'// AllowAllHostMsgs holds the string key that allows all message types on interchain accounts host module\nconst AllowAllHostMsgs = "*"\n\n...\n\n// DefaultParams is the default parameter configuration for the host submodule\nfunc DefaultParams() Params {\n-   return NewParams(DefaultHostEnabled, nil)\n+   return NewParams(DefaultHostEnabled, []string{AllowAllHostMsgs})\n}\n')),(0,r.yg)("h4",{id:"api-breaking-changes"},"API breaking changes"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"SerializeCosmosTx")," takes in a ",(0,r.yg)("inlineCode",{parentName:"p"},"[]proto.Message")," instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"[]sdk.Message"),". This allows for the serialization of proto messages without requiring the fulfillment of the ",(0,r.yg)("inlineCode",{parentName:"p"},"sdk.Msg")," interface."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"27-interchain-accounts")," genesis types have been moved to their own package: ",(0,r.yg)("inlineCode",{parentName:"p"},"modules/apps/27-interchain-acccounts/genesis/types"),".\nThis change facilitates the addition of the ICS27 controller submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer")," and avoids cyclic imports. This should have minimal disruption to chain developers integrating ",(0,r.yg)("inlineCode",{parentName:"p"},"27-interchain-accounts"),"."),(0,r.yg)("p",null,"The ICS27 host submodule ",(0,r.yg)("inlineCode",{parentName:"p"},"NewKeeper")," function in ",(0,r.yg)("inlineCode",{parentName:"p"},"modules/apps/27-interchain-acccounts/host/keeper")," now includes an additional parameter of type ",(0,r.yg)("inlineCode",{parentName:"p"},"ICS4Wrapper"),".\nThis provides the host submodule with the ability to correctly unwrap channel versions in the event of a channel reopening handshake."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"func NewKeeper(\n    cdc codec.BinaryCodec, key storetypes.StoreKey, paramSpace paramtypes.Subspace,\n-   channelKeeper icatypes.ChannelKeeper, portKeeper icatypes.PortKeeper,\n+   ics4Wrapper icatypes.ICS4Wrapper, channelKeeper icatypes.ChannelKeeper, portKeeper icatypes.PortKeeper,\n    accountKeeper icatypes.AccountKeeper, scopedKeeper icatypes.ScopedKeeper, msgRouter icatypes.MessageRouter,\n) Keeper\n")),(0,r.yg)("h3",{id:"ics29---newkeeper-api-change"},"ICS29 - ",(0,r.yg)("inlineCode",{parentName:"h3"},"NewKeeper")," API change"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"NewKeeper")," function of ICS29 has been updated to remove the ",(0,r.yg)("inlineCode",{parentName:"p"},"paramSpace")," parameter as it was unused."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"func NewKeeper(\n-   cdc codec.BinaryCodec, key storetypes.StoreKey, paramSpace paramtypes.Subspace,\n-   ics4Wrapper types.ICS4Wrapper, channelKeeper types.ChannelKeeper, portKeeper types.PortKeeper, authKeeper types.AccountKeeper, bankKeeper types.BankKeeper,\n+   cdc codec.BinaryCodec, key storetypes.StoreKey,\n+   ics4Wrapper types.ICS4Wrapper, channelKeeper types.ChannelKeeper,\n+   portKeeper types.PortKeeper, authKeeper types.AccountKeeper, bankKeeper types.BankKeeper,\n) Keeper {\n")),(0,r.yg)("h3",{id:"ics20---sendtransfer-is-no-longer-exported"},"ICS20 - ",(0,r.yg)("inlineCode",{parentName:"h3"},"SendTransfer")," is no longer exported"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"SendTransfer")," function of ICS20 has been removed. IBC transfers should now be initiated with ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgTransfer")," and routed to the ICS20 ",(0,r.yg)("inlineCode",{parentName:"p"},"MsgServer"),"."),(0,r.yg)("p",null,"See below for example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"if handler := msgRouter.Handler(msgTransfer); handler != nil {\n    if err := msgTransfer.ValidateBasic(); err != nil {\n        return nil, err\n    }\n\n    res, err := handler(ctx, msgTransfer)\n    if err != nil {\n        return nil, err\n    }\n}\n")),(0,r.yg)("h3",{id:"ics04---sendpacket-api-change"},"ICS04 - ",(0,r.yg)("inlineCode",{parentName:"h3"},"SendPacket")," API change"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"SendPacket")," API has been simplified:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"// SendPacket is called by a module in order to send an IBC packet on a channel\nfunc (k Keeper) SendPacket(\n    ctx sdk.Context,\n    channelCap *capabilitytypes.Capability,\n-   packet exported.PacketI,\n-) error {\n+   sourcePort string,\n+   sourceChannel string,\n+   timeoutHeight clienttypes.Height,\n+   timeoutTimestamp uint64,\n+   data []byte,\n+) (uint64, error) {\n")),(0,r.yg)("p",null,"Callers no longer need to pass in a pre-constructed packet.\nThe destination port/channel identifiers and the packet sequence will be determined by core IBC.\n",(0,r.yg)("inlineCode",{parentName:"p"},"SendPacket")," will return the packet sequence."),(0,r.yg)("h3",{id:"ibc-testing-package"},"IBC testing package"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"SendPacket")," API has been simplified:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"// SendPacket is called by a module in order to send an IBC packet on a channel\nfunc (k Keeper) SendPacket(\n    ctx sdk.Context,\n    channelCap *capabilitytypes.Capability,\n-   packet exported.PacketI,\n-) error {\n+   sourcePort string,\n+   sourceChannel string,\n+   timeoutHeight clienttypes.Height,\n+   timeoutTimestamp uint64,\n+   data []byte,\n+) (uint64, error) {\n")),(0,r.yg)("p",null,"Callers no longer need to pass in a pre-constructed packet. ",(0,r.yg)("inlineCode",{parentName:"p"},"SendPacket")," will return the packet sequence."),(0,r.yg)("h2",{id:"relayers"},"Relayers"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"No relevant changes were made in this release.")),(0,r.yg)("h2",{id:"ibc-light-clients"},"IBC Light Clients"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"No relevant changes were made in this release.")))}g.isMDXComponent=!0},38165:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/auth-module-decision-tree-d241ff33b40befa4fff8e7f00e07bd3a.png"}}]);