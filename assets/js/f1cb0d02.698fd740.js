"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[85341],{15680:(e,n,i)=>{i.d(n,{xA:()=>g,yg:()=>m});var t=i(96540);function o(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){o(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,o=function(e,n){if(null==e)return{};var i,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(o[i]=e[i]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var s=t.createContext({}),p=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},g=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var i=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),u=p(i),c=o,m=u["".concat(s,".").concat(c)]||u[c]||d[c]||r;return i?t.createElement(m,a(a({ref:n},g),{},{components:i})):t.createElement(m,a({ref:n},g))}));function m(e,n){var i=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=i.length,a=new Array(r);a[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=i[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}c.displayName="MDXCreateElement"},3451:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var t=i(58168),o=(i(96540),i(15680));const r={sidebar_position:1},a="What is runtime?",l={unversionedId:"docs/build/building-apps/runtime",id:"docs/build/building-apps/runtime",title:"What is runtime?",description:"The runtime package in the Cosmos SDK provides a flexible framework for configuring and managing blockchain applications. It serves as the foundation for creating modular blockchain applications using a declarative configuration approach.",source:"@site/cosmos-sdk/docs/build/building-apps/00-runtime.md",sourceDirName:"docs/build/building-apps",slug:"/docs/build/building-apps/runtime",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-apps/runtime",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Cosmos SDK Upgrade Guide: v0.50 \u2192 v0.52",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-apps/upgrades/0.52"},next:{title:"Overview of app_di.go",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-apps/app-go-di"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Core Components",id:"core-components",level:2},{value:"App Structure",id:"app-structure",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Store Configuration",id:"store-configuration",level:4},{value:"Key Features",id:"key-features",level:2},{value:"1. BaseApp and other Core SDK components integration",id:"1-baseapp-and-other-core-sdk-components-integration",level:3},{value:"2. Module Registration",id:"2-module-registration",level:3},{value:"3. Service Registration",id:"3-service-registration",level:3},{value:"4. Application Building",id:"4-application-building",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Migration Considerations",id:"migration-considerations",level:3}],g={toc:p},u="wrapper";function d(e){let{components:n,...i}=e;return(0,o.yg)(u,(0,t.A)({},g,i,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"what-is-runtime"},"What is ",(0,o.yg)("inlineCode",{parentName:"h1"},"runtime"),"?"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"runtime")," package in the Cosmos SDK provides a flexible framework for configuring and managing blockchain applications. It serves as the foundation for creating modular blockchain applications using a declarative configuration approach."),(0,o.yg)("h2",{id:"overview"},"Overview"),(0,o.yg)("p",null,"The runtime package acts as a wrapper around the ",(0,o.yg)("inlineCode",{parentName:"p"},"BaseApp")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"ModuleManager"),", offering a hybrid approach where applications can be configured both declaratively through configuration files and programmatically through traditional methods.\nIt is a layer of abstraction between ",(0,o.yg)("inlineCode",{parentName:"p"},"baseapp")," and the application modules that simplifies the process of building a Cosmos SDK application."),(0,o.yg)("h2",{id:"core-components"},"Core Components"),(0,o.yg)("h3",{id:"app-structure"},"App Structure"),(0,o.yg)("p",null,"The runtime App struct contains several key components:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go"},"type App struct {\n    *baseapp.BaseApp\n    ModuleManager      *module.Manager\n    UnorderedTxManager *unorderedtx.Manager\n    configurator      module.Configurator\n    config           *runtimev1alpha1.Module\n    storeKeys        []storetypes.StoreKey\n    // ... other fields\n}\n")),(0,o.yg)("p",null,"It is the struct that any Cosmos SDK application should embed to leverage the runtime module."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_di.go#L61-L62\n")),(0,o.yg)("h3",{id:"configuration"},"Configuration"),(0,o.yg)("p",null,"The runtime module is configured using App Wiring. The main configuration object is the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/proto/cosmos/app/runtime/v1alpha1/module.proto"},(0,o.yg)("inlineCode",{parentName:"a"},"Module")," message"),", which supports the following key settings:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"app_name"),": The name of the application"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"begin_blockers"),": List of module names to call during BeginBlock"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"end_blockers"),": List of module names to call during EndBlock"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"init_genesis"),": Order of module initialization during genesis"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"export_genesis"),": Order for exporting module genesis data"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"pre_blockers"),": Modules to execute before block processing")),(0,o.yg)("p",null,"Learn more about wiring ",(0,o.yg)("inlineCode",{parentName:"p"},"runtime")," in the ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-apps/app-go-di"},"next section"),"."),(0,o.yg)("h4",{id:"store-configuration"},"Store Configuration"),(0,o.yg)("p",null,"By default, the runtime module uses the module name as the store key.\nHowever it provides a flexible store key configuration through:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"override_store_keys"),": Allows customizing module store keys"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"skip_store_keys"),": Specifies store keys to skip during keeper construction")),(0,o.yg)("p",null,"Example configuration:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/v2/app_config.go#L138-L147\n")),(0,o.yg)("h2",{id:"key-features"},"Key Features"),(0,o.yg)("h3",{id:"1-baseapp-and-other-core-sdk-components-integration"},"1. BaseApp and other Core SDK components integration"),(0,o.yg)("p",null,"The runtime module integrates with the ",(0,o.yg)("inlineCode",{parentName:"p"},"BaseApp")," and other core SDK components to provide a seamless experience for developers."),(0,o.yg)("p",null,"The developer only needs to embed the ",(0,o.yg)("inlineCode",{parentName:"p"},"App")," struct in their application to leverage the runtime module.\nThe configuration of the module manager and other core components is handled internally via the ",(0,o.yg)("a",{parentName:"p",href:"#4-application-building"},(0,o.yg)("inlineCode",{parentName:"a"},"AppBuilder")),"."),(0,o.yg)("h3",{id:"2-module-registration"},"2. Module Registration"),(0,o.yg)("p",null,"Runtime has built-in support for ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-modules/depinject"},(0,o.yg)("inlineCode",{parentName:"a"},"depinject"),"-enabled modules"),".\nSuch modules can be registered through the configuration file (often named ",(0,o.yg)("inlineCode",{parentName:"p"},"app_config.go"),"), with no additional code required."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go#L210-L215\n")),(0,o.yg)("p",null,"Additionally, the runtime package facilitates manual module registration through the ",(0,o.yg)("inlineCode",{parentName:"p"},"RegisterModules")," method. This is the primary integration point for modules not registered via configuration."),(0,o.yg)("admonition",{type:"warning"},(0,o.yg)("p",{parentName:"admonition"},"Even when using manual registration, the module should still be configured in the ",(0,o.yg)("inlineCode",{parentName:"p"},"Module")," message in AppConfig.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go"},"func (a *App) RegisterModules(modules ...module.AppModule) error\n")),(0,o.yg)("p",null,"The SDK recommends using the declarative approach with ",(0,o.yg)("inlineCode",{parentName:"p"},"depinject")," for module registration whenever possible."),(0,o.yg)("h3",{id:"3-service-registration"},"3. Service Registration"),(0,o.yg)("p",null,"Runtime registers all ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/core"},"core services")," required by modules.\nThese services include the ",(0,o.yg)("inlineCode",{parentName:"p"},"store"),", the ",(0,o.yg)("inlineCode",{parentName:"p"},"event manager"),", the ",(0,o.yg)("inlineCode",{parentName:"p"},"context"),", and the ",(0,o.yg)("inlineCode",{parentName:"p"},"logger"),".\nAs runtime is doing the wiring of modules, it can ensure that the services are scoped to their respective modules."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/runtime/module.go#L250-L279\n")),(0,o.yg)("p",null,"Additionally, runtime provides automatic registration of other essential (f.e gRPC routes) services, available to the App:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"AutoCLI Query Service"),(0,o.yg)("li",{parentName:"ul"},"Reflection Service"),(0,o.yg)("li",{parentName:"ul"},"Custom module services")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/runtime/builder.go#L74-L77\n")),(0,o.yg)("h3",{id:"4-application-building"},"4. Application Building"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"AppBuilder")," type provides a structured way to build applications:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/runtime/builder.go#L22-L29\n")),(0,o.yg)("p",null,"Key building steps:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Configuration loading"),(0,o.yg)("li",{parentName:"ol"},"Module registration"),(0,o.yg)("li",{parentName:"ol"},"Service setup"),(0,o.yg)("li",{parentName:"ol"},"Store mounting"),(0,o.yg)("li",{parentName:"ol"},"Router configuration")),(0,o.yg)("p",null,"An application only needs to call ",(0,o.yg)("inlineCode",{parentName:"p"},"AppBuilder.Build")," to create a fully configured application (",(0,o.yg)("inlineCode",{parentName:"p"},"runtime.App"),")."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/runtime/builder.go#L36-L80\n")),(0,o.yg)("p",null,"More information on building applications can be found in the ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-apps/app-go-di"},"next section"),"."),(0,o.yg)("h2",{id:"best-practices"},"Best Practices"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Module Order"),": Carefully consider the order of modules in begin_blockers and end_blockers"),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Store Keys"),": Use override_store_keys only when necessary to maintain clarity"),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Genesis Order"),": Maintain correct initialization order in init_genesis"),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Migration Management"),": Use order_migrations to control upgrade paths")),(0,o.yg)("h3",{id:"migration-considerations"},"Migration Considerations"),(0,o.yg)("p",null,"When upgrading between versions:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Review the migration order specified in ",(0,o.yg)("inlineCode",{parentName:"li"},"order_migrations")),(0,o.yg)("li",{parentName:"ol"},"Ensure all required modules are included in the configuration"),(0,o.yg)("li",{parentName:"ol"},"Validate store key configurations"),(0,o.yg)("li",{parentName:"ol"},"Test the upgrade path thoroughly")))}d.isMDXComponent=!0}}]);