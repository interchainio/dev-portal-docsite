"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[28519],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(n),u=r,d=g["".concat(s,".").concat(u)]||g[u]||m[u]||i;return n?a.createElement(d,o(o({ref:t},p),{},{components:n})):a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25372:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(58168),r=(n(96540),n(15680));const i={title:"IBC-Go v8 to v8.1",sidebar_label:"IBC-Go v8 to v8.1",sidebar_position:12,slug:"/migrations/v8-to-v8_1"},o="Migrating from v8 to v8.1",l={unversionedId:"docs/migrations/v8-to-v8_1",id:"docs/migrations/v8-to-v8_1",title:"IBC-Go v8 to v8.1",description:"This guide provides instructions for migrating to version v8.1.0 of ibc-go.",source:"@site/ibc-go/docs/05-migrations/12-v8-to-v8_1.md",sourceDirName:"docs/05-migrations",slug:"/migrations/v8-to-v8_1",permalink:"/dev-portal-docsite/ibc-go/next/migrations/v8-to-v8_1",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"IBC-Go v8 to v8.1",sidebar_label:"IBC-Go v8 to v8.1",sidebar_position:12,slug:"/migrations/v8-to-v8_1"},sidebar:"defaultSidebar",previous:{title:"IBC-Go v7 to v8",permalink:"/dev-portal-docsite/ibc-go/next/migrations/v7-to-v8"},next:{title:"IBC-Go v8 to v9",permalink:"/dev-portal-docsite/ibc-go/next/migrations/v8-to-v9"}},s={},c=[{value:"Chains",id:"chains",level:2},{value:"<code>04-channel</code> params migration",id:"04-channel-params-migration",level:3},{value:"Fee migration",id:"fee-migration",level:3},{value:"IBC apps",id:"ibc-apps",level:2},{value:"Relayers",id:"relayers",level:2},{value:"IBC light clients",id:"ibc-light-clients",level:2}],p={toc:c},g="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(g,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"migrating-from-v8-to-v81"},"Migrating from v8 to v8.1"),(0,r.yg)("p",null,"This guide provides instructions for migrating to version ",(0,r.yg)("inlineCode",{parentName:"p"},"v8.1.0")," of ibc-go."),(0,r.yg)("p",null,"There are four sections based on the four potential user groups of this document:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#migrating-from-v8-to-v81"},"Migrating from v8 to v8.1"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#chains"},"Chains")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ibc-apps"},"IBC apps")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#relayers"},"Relayers")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ibc-light-clients"},"IBC light clients"))))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")," ibc-go supports golang semantic versioning and therefore all imports must be updated on major version releases."),(0,r.yg)("h2",{id:"chains"},"Chains"),(0,r.yg)("h3",{id:"04-channel-params-migration"},(0,r.yg)("inlineCode",{parentName:"h3"},"04-channel")," params migration"),(0,r.yg)("p",null,"Self-managed ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v8.1.0/proto/ibc/core/channel/v1/channel.proto#L183-L187"},"params")," have been added for ",(0,r.yg)("inlineCode",{parentName:"p"},"04-channel")," module. The params include the ",(0,r.yg)("inlineCode",{parentName:"p"},"upgrade_timeout")," that is used in channel upgradability to specify the interval of time during which the counterparty chain must flush all in-flight packets on its end and move to ",(0,r.yg)("inlineCode",{parentName:"p"},"FLUSH_COMPLETE")," state (see ",(0,r.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/next/ibc/channel-upgrades#"},"Channel Upgrades")," for more information). An ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v8.1.0/modules/core/module.go#L162-L166"},"automatic migration handler")," is configured in the ",(0,r.yg)("inlineCode",{parentName:"p"},"04-channel")," module that sets the default params (with a default upgrade timeout of 10 minutes). The module has a corresponding ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v8.1.0/proto/ibc/core/channel/v1/tx.proto#L435-L447"},(0,r.yg)("inlineCode",{parentName:"a"},"MsgUpdateParams")," message")," with a ",(0,r.yg)("inlineCode",{parentName:"p"},"Params")," field which can be specified in full to update the module's ",(0,r.yg)("inlineCode",{parentName:"p"},"Params"),"."),(0,r.yg)("h3",{id:"fee-migration"},"Fee migration"),(0,r.yg)("p",null,"In ibc-go v8.1.0 an improved, more efficient escrow calculation of fees for packet incentivisation has been introduced (see ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/issues/5509"},"this issue")," for more information). Before v8.1.0 the amount escrowed was ",(0,r.yg)("inlineCode",{parentName:"p"},"(ReckFee + AckFee + TimeoutFee)"),"; from ibc-go v8.1.0, the calculation is changed to ",(0,r.yg)("inlineCode",{parentName:"p"},"Max(RecvFee + AckFee, TimeoutFee)"),". In order to guarantee that the correct amount of fees are refunded for packets that are in-flight during the upgrade to ibc-go v8.1.0, an ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v8.1.0/modules/apps/29-fee/module.go#L113-L115"},"automatic migration handler")," is configured in the ",(0,r.yg)("inlineCode",{parentName:"p"},"29-fee")," module to refund the leftover fees (i.e ",(0,r.yg)("inlineCode",{parentName:"p"},"(ReckFee + AckFee + TimeoutFee) - Max(RecvFee + AckFee, TimeoutFee)"),") that otherwise would not be refunded when the packet lifecycle completes and the new calculation is used."),(0,r.yg)("h2",{id:"ibc-apps"},"IBC apps"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"No relevant changes were made in this release.")),(0,r.yg)("h2",{id:"relayers"},"Relayers"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"No relevant changes were made in this release.")),(0,r.yg)("h2",{id:"ibc-light-clients"},"IBC light clients"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"No relevant changes were made in this release.")))}m.isMDXComponent=!0}}]);