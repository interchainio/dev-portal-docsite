"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[21340],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>g});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90610:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(58168),a=(r(96540),r(15680));const o={title:"Name Service",sidebar_label:"Set Structure",sidebar_position:2,slug:"/build/name-service-structure"},i="Set Data Structure",s={unversionedId:"build-your-application/proto-logic",id:"version-v0.50.x/build-your-application/proto-logic",title:"Name Service",description:"Extend the template module and add how to store and interact with data. Specifically, you need to set and retrieve a name.",source:"@site/onboarding_versioned_docs/version-v0.50.x/02-build-your-application/02-proto-logic.md",sourceDirName:"02-build-your-application",slug:"/build/name-service-structure",permalink:"/dev-portal-docsite/onboarding/build/name-service-structure",draft:!1,tags:[],version:"v0.50.x",sidebarPosition:2,frontMatter:{title:"Name Service",sidebar_label:"Set Structure",sidebar_position:2,slug:"/build/name-service-structure"},sidebar:"defaultSidebar",previous:{title:"Build a Name Service",permalink:"/dev-portal-docsite/onboarding/build/name-service"},next:{title:"Application Logic",permalink:"/dev-portal-docsite/onboarding/build/name-service-application"}},l={},c=[{value:"Set Name",id:"set-name",level:3},{value:"Get Name",id:"get-name",level:3},{value:"Generate Code",id:"generate-code",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(u,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"set-data-structure"},"Set Data Structure"),(0,a.yg)("p",null,"Extend the template module and add how to store and interact with data. Specifically, you need to set and retrieve a name."),(0,a.yg)("h3",{id:"set-name"},"Set Name"),(0,a.yg)("p",null,"Open the ",(0,a.yg)("inlineCode",{parentName:"p"},"proto/nameservice/v1")," directory. Edit ",(0,a.yg)("inlineCode",{parentName:"p"},"tx.proto")," to add the transaction setter message."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="proto/nameservice/v1/tx.proto"',title:'"proto/nameservice/v1/tx.proto"'},'\n  // SetServiceName allows a user to set their accounts name.\n  rpc SetServiceName(MsgSetServiceName) returns (MsgSetServiceNameResponse);\n}\n\n// MsgSetServiceName defines the structure for setting a name.\nmessage MsgSetServiceName {\n  option (cosmos.msg.v1.signer) = "sender";\n\n  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];\n\n  string name = 2;\n}\n\n// MsgSetServiceNameResponse is an empty reply.\nmessage MsgSetServiceNameResponse {}\n')),(0,a.yg)("details",null,"proto/nameservice/v1/tx.proto file ![proto/nameservice/v1/tx.proto file](https://github.com/rollchains/spawn/assets/31943163/73a583e2-9edd-471f-ada6-1010d0dbf072)"),(0,a.yg)("h3",{id:"get-name"},"Get Name"),(0,a.yg)("p",null,"Find ",(0,a.yg)("inlineCode",{parentName:"p"},"query.proto")," and add the following"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="proto/nameservice/v1/query.proto"',title:'"proto/nameservice/v1/query.proto"'},'\n  // ResolveName allows a user to resolve the name of an account.\n  rpc ResolveName(QueryResolveNameRequest) returns (QueryResolveNameResponse) {\n    option (google.api.http).get = "/nameservice/v1/name/{wallet}";\n  }\n}\n\n// QueryResolveNameRequest grabs the name of a wallet.\nmessage QueryResolveNameRequest {\n  string wallet = 1;\n}\n\n// QueryResolveNameResponse grabs the wallet linked to a name.\nmessage QueryResolveNameResponse {\n  string name = 1;\n}\n')),(0,a.yg)("details",null,"proto/nameservice/v1/query.proto ![proto/nameservice/v1/query.proto file](https://github.com/rollchains/spawn/assets/31943163/234a13d7-be62-492d-961c-63e92d7543d9)"),(0,a.yg)("h2",{id:"generate-code"},"Generate Code"),(0,a.yg)("p",null,"These .proto file templates will be converted into Golang source code for you to use. Build the Go source code using the command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"make proto-gen\n")),(0,a.yg)("details",null,"make proto-gen expected output ![make proto-gen](https://github.com/rollchains/spawn/assets/31943163/c51bf57c-e83a-4004-8041-9b1f3d3a24f4)"))}d.isMDXComponent=!0}}]);