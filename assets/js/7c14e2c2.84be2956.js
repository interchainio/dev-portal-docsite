"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[3320],{15680:(e,r,o)=>{o.d(r,{xA:()=>c,yg:()=>b});var t=o(96540);function n(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function a(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function p(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?a(Object(o),!0).forEach((function(r){n(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function s(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=t.createContext({}),l=function(e){var r=t.useContext(i),o=r;return e&&(o="function"==typeof e?e(r):p(p({},r),e)),o},c=function(e){var r=l(e.components);return t.createElement(i.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var o=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(o),m=n,b=d["".concat(i,".").concat(m)]||d[m]||u[m]||a;return o?t.createElement(b,p(p({ref:r},c),{},{components:o})):t.createElement(b,p({ref:r},c))}));function b(e,r){var o=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=o.length,p=new Array(a);p[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[d]="string"==typeof e?e:n,p[1]=s;for(var l=2;l<a;l++)p[l]=o[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},57943:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=o(58168),n=(o(96540),o(15680));const a={},p="Process Proposal",s={unversionedId:"build/abci/process-proposal",id:"version-0.50/build/abci/process-proposal",title:"Process Proposal",description:"ProcessProposal handles the validation of a proposal from PrepareProposal,",source:"@site/cosmos-sdk_versioned_docs/version-0.50/build/abci/02-process-proposal.md",sourceDirName:"build/abci",slug:"/build/abci/process-proposal",permalink:"/dev-portal-docsite/cosmos-sdk/0.50/build/abci/process-proposal",draft:!1,tags:[],version:"0.50",sidebarPosition:2,frontMatter:{},sidebar:"buildSidebar",previous:{title:"Prepare Proposal",permalink:"/dev-portal-docsite/cosmos-sdk/0.50/build/abci/prepare-proposal"},next:{title:"Vote Extensions",permalink:"/dev-portal-docsite/cosmos-sdk/0.50/build/abci/vote-extensions"}},i={},l=[],c={toc:l},d="wrapper";function u(e){let{components:r,...o}=e;return(0,n.yg)(d,(0,t.A)({},c,o,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"process-proposal"},"Process Proposal"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"ProcessProposal")," handles the validation of a proposal from ",(0,n.yg)("inlineCode",{parentName:"p"},"PrepareProposal"),",\nwhich also includes a block header. Meaning, that after a block has been proposed\nthe other validators have the right to vote on a block. The validator in the\ndefault implementation of ",(0,n.yg)("inlineCode",{parentName:"p"},"PrepareProposal")," runs basic validity checks on each\ntransaction."),(0,n.yg)("p",null,"Note, ",(0,n.yg)("inlineCode",{parentName:"p"},"ProcessProposal")," MAY NOT be non-deterministic, i.e. it must be deterministic.\nThis means if ",(0,n.yg)("inlineCode",{parentName:"p"},"ProcessProposal")," panics or fails and we reject, all honest validator\nprocesses will prevote nil and the CometBFT round will proceed again until a valid\nproposal is proposed."),(0,n.yg)("p",null,"Here is the implementation of the default implementation:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-alpha.0/baseapp/abci_utils.go#L153-L159\n")),(0,n.yg)("p",null,"Like ",(0,n.yg)("inlineCode",{parentName:"p"},"PrepareProposal")," this implementation is the default and can be modified by\nthe application developer in ",(0,n.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/0.50/build/abci/app-go-v2"},(0,n.yg)("inlineCode",{parentName:"a"},"app.go")),". If you decide to implement\nyour own ",(0,n.yg)("inlineCode",{parentName:"p"},"ProcessProposal")," handler, you must be sure to ensure that the transactions\nprovided in the proposal DO NOT exceed the maximum block gas and ",(0,n.yg)("inlineCode",{parentName:"p"},"maxtxbytes")," (if set)."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-go"},"processOpt := func(app *baseapp.BaseApp) {\nabciPropHandler := baseapp.NewDefaultProposalHandler(mempool, app)\napp.SetProcessProposal(abciPropHandler.ProcessProposalHandler())\n}\n\nbaseAppOptions = append(baseAppOptions, processOpt)\n")))}u.isMDXComponent=!0}}]);