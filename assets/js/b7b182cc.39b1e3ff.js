"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[95185],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var o=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=o.createContext({}),d=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(r),m=i,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||n;return r?o.createElement(f,a(a({ref:t},c),{},{components:r})):o.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var d=2;d<n;d++)a[d]=r[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},61562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var o=r(58168),i=(r(96540),r(15680));const n={sidebar_position:0},a="Build",s={unversionedId:"build/build",id:"version-0.47/build/build",title:"Build",description:"*   Architecture - Overview and detailed explanation of the system architecture.",source:"@site/cosmos-sdk_versioned_docs/version-0.47/build/build.md",sourceDirName:"build",slug:"/build/",permalink:"/dev-portal-docsite/cosmos-sdk/0.47/build/",draft:!1,tags:[],version:"0.47",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"buildSidebar",next:{title:"Overview of app.go",permalink:"/dev-portal-docsite/cosmos-sdk/0.47/build/building-apps/app-go"}},l={},d=[],c={toc:d},p="wrapper";function u(e){let{components:t,...r}=e;return(0,i.yg)(p,(0,o.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"build"},"Build"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/architecture/"},"Architecture")," - Overview and detailed explanation of the system architecture."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/building-apps/app-go"},"Building Apps")," - The documentation in this section will guide you through the process of developing your dApp using the Cosmos SDK framework."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/modules/"},"Modules")," - Information about the various modules available in the Cosmos SDK: Auth, Authz, Bank, Crisis, Distribution, Evidence, Feegrant, Governance, Mint, Params, Slashing, Staking, Upgrade, NFT, Consensus, Circuit, Genutil."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/migrations/intro"},"Migrations")," - See what has been updated in each release the process of the transition between versions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/packages/"},"Packages")," - Explore a curated collection of pre-built modules and functionalities, streamlining the development process."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/tooling/"},"Tooling")," - A suite of utilities designed to enhance the development workflow, optimizing the efficiency of Cosmos SDK-based projects."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/architecture/"},"ADR's")," - Provides a structured repository of key decisions made during the development process, which have been documented and offers rationale behind key decisions being made."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/rfc/"},"RFC")," - A Request for Comments (RFC) is a record of discussion on an open-ended topic related to the design and implementation of the Cosmos SDK, for which no immediate decision is required."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/0.47/build/spec/SPEC_STANDARD"},"Specifications")," - A detailed reference for the specifications of various components and features."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://docs.cosmos.network/api"},"REST API")," - A comprehensive reference for the application programming interfaces (APIs) provided by the SDK.")))}u.isMDXComponent=!0}}]);