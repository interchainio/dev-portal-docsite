"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[58863],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=l(t),d=o,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||i;return t?a.createElement(m,r(r({ref:n},p),{},{components:t})):a.createElement(m,r({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[h]="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},53491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=t(58168),o=(t(96540),t(15680));const i={title:"Overview",sidebar_label:"Overview",sidebar_position:1,slug:"/apps/interchain-accounts/overview"},r="Overview",c={unversionedId:"apps/interchain-accounts/overview",id:"version-v8.5.x/apps/interchain-accounts/overview",title:"Overview",description:"Learn about what the Interchain Accounts module is",source:"@site/ibc-go_versioned_docs/version-v8.5.x/02-apps/02-interchain-accounts/01-overview.md",sourceDirName:"02-apps/02-interchain-accounts",slug:"/apps/interchain-accounts/overview",permalink:"/dev-portal-docsite/ibc-go/apps/interchain-accounts/overview",draft:!1,tags:[],version:"v8.5.x",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_label:"Overview",sidebar_position:1,slug:"/apps/interchain-accounts/overview"},sidebar:"defaultSidebar",previous:{title:"Client",permalink:"/dev-portal-docsite/ibc-go/apps/transfer/client"},next:{title:"Development Use Cases",permalink:"/dev-portal-docsite/ibc-go/apps/interchain-accounts/development"}},s={},l=[{value:"What is the Interchain Accounts module?",id:"what-is-the-interchain-accounts-module",level:2},{value:"Concepts",id:"concepts",level:2},{value:"SDK security model",id:"sdk-security-model",level:2},{value:"Channel Closure",id:"channel-closure",level:2}],p={toc:l},h="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(h,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"overview"},"Overview"),(0,o.yg)("admonition",{title:"Synopsis",type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Learn about what the Interchain Accounts module is")),(0,o.yg)("h2",{id:"what-is-the-interchain-accounts-module"},"What is the Interchain Accounts module?"),(0,o.yg)("p",null,"Interchain Accounts is the Cosmos SDK implementation of the ICS-27 protocol, which enables cross-chain account management built upon IBC."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"How does an interchain account differ from a regular account?")),(0,o.yg)("p",null,"Regular accounts use a private key to sign transactions. Interchain Accounts are instead controlled programmatically by counterparty chains via IBC packets."),(0,o.yg)("h2",{id:"concepts"},"Concepts"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Host Chain"),": The chain where the interchain account is registered. The host chain listens for IBC packets from a controller chain which should contain instructions (e.g. Cosmos SDK messages) for which the interchain account will execute."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Controller Chain"),": The chain registering and controlling an account on a host chain. The controller chain sends IBC packets to the host chain to control the account."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Interchain Account"),": An account on a host chain created using the ICS-27 protocol. An interchain account has all the capabilities of a normal account. However, rather than signing transactions with a private key, a controller chain will send IBC packets to the host chain which signals what transactions the interchain account should execute."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Authentication Module"),": A custom application module on the controller chain that uses the Interchain Accounts module to build custom logic for the creation & management of interchain accounts. It can be either an IBC application module using the ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/apps/interchain-accounts/legacy/keeper-api"},"legacy API"),", or a regular Cosmos SDK application module sending messages to the controller submodule's ",(0,o.yg)("inlineCode",{parentName:"p"},"MsgServer")," (this is the recommended approach from ibc-go v6 if access to packet callbacks is not needed). Please note that the legacy API will eventually be removed and IBC applications will not be able to use them in later releases."),(0,o.yg)("h2",{id:"sdk-security-model"},"SDK security model"),(0,o.yg)("p",null,"SDK modules on a chain are assumed to be trustworthy. For example, there are no checks to prevent an untrustworthy module from accessing the bank keeper."),(0,o.yg)("p",null,"The implementation of ICS-27 in ibc-go uses this assumption in its security considerations."),(0,o.yg)("p",null,"The implementation assumes other IBC application modules will not bind to ports within the ICS-27 namespace."),(0,o.yg)("h2",{id:"channel-closure"},"Channel Closure"),(0,o.yg)("p",null,"The provided interchain account host and controller implementations do not support ",(0,o.yg)("inlineCode",{parentName:"p"},"ChanCloseInit"),". However, they do support ",(0,o.yg)("inlineCode",{parentName:"p"},"ChanCloseConfirm"),".\nThis means that the host and controller modules cannot close channels, but they will confirm channel closures initiated by other implementations of ICS-27."),(0,o.yg)("p",null,"In the event of a channel closing (due to a packet timeout in an ordered channel, for example), the interchain account associated with that channel can become accessible again if a new channel is created with a (JSON-formatted) version string that encodes the exact same ",(0,o.yg)("inlineCode",{parentName:"p"},"Metadata")," information of the previous channel. The channel can be reopened using either ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/apps/interchain-accounts/messages#msgregisterinterchainaccount"},(0,o.yg)("inlineCode",{parentName:"a"},"MsgRegisterInterchainAccount"))," or ",(0,o.yg)("inlineCode",{parentName:"p"},"MsgChannelOpenInit"),". If ",(0,o.yg)("inlineCode",{parentName:"p"},"MsgRegisterInterchainAccount")," is used, then it is possible to leave the ",(0,o.yg)("inlineCode",{parentName:"p"},"version")," field of the message empty, since it will be filled in by the controller submodule. If ",(0,o.yg)("inlineCode",{parentName:"p"},"MsgChannelOpenInit")," is used, then the ",(0,o.yg)("inlineCode",{parentName:"p"},"version")," field must be provided with the correct JSON-encoded ",(0,o.yg)("inlineCode",{parentName:"p"},"Metadata")," string. See section ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/apps/interchain-accounts/active-channels#understanding-active-channels"},"Understanding Active Channels")," for more information."),(0,o.yg)("p",null,"When reopening a channel with the default controller submodule, the ordering of the channel cannot be changed. In order to change the ordering of the channel, the channel has to go through a ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/ibc-go/ibc/channel-upgrades"},"channel upgrade handshake")," or reopen the channel with a custom controller implementation."))}u.isMDXComponent=!0}}]);