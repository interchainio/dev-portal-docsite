"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[53316],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var i=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),g=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=g(e.components);return i.createElement(o.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=g(t),u=a,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||l;return t?i.createElement(m,r(r({ref:n},c),{},{components:t})):i.createElement(m,r({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=u;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[p]="string"==typeof e?e:a,r[1]=s;for(var g=2;g<l;g++)r[g]=t[g];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},73890:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>g});var i=t(58168),a=(t(96540),t(15680));const l={},r="x/genutil",s={unversionedId:"docs/build/modules/genutil/README",id:"docs/build/modules/genutil/README",title:"x/genutil",description:"Concepts",source:"@site/cosmos-sdk/docs/build/modules/genutil/README.md",sourceDirName:"docs/build/modules/genutil",slug:"/docs/build/modules/genutil/",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/modules/genutil/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"x/circuit",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/modules/circuit/"},next:{title:"x/validate",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/build/modules/validate/"}},o={},g=[{value:"Concepts",id:"concepts",level:2},{value:"Genesis",id:"genesis",level:2},{value:"Client",id:"client",level:2},{value:"CLI",id:"cli",level:3},{value:"add-genesis-account",id:"add-genesis-account",level:4},{value:"collect-gentxs",id:"collect-gentxs",level:4},{value:"gentx",id:"gentx",level:4},{value:"migrate",id:"migrate",level:4},{value:"validate-genesis",id:"validate-genesis",level:4},{value:"export",id:"export",level:4}],c={toc:g},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"xgenutil"},(0,a.yg)("inlineCode",{parentName:"h1"},"x/genutil")),(0,a.yg)("h2",{id:"concepts"},"Concepts"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"genutil")," package contains a variety of genesis utility functionalities for usage within a blockchain application. Namely:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Genesis transactions related (gentx)"),(0,a.yg)("li",{parentName:"ul"},"Commands for collection and creation of gentxs"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"InitChain")," processing of gentxs"),(0,a.yg)("li",{parentName:"ul"},"Genesis file creation"),(0,a.yg)("li",{parentName:"ul"},"Genesis file validation"),(0,a.yg)("li",{parentName:"ul"},"Genesis file migration"),(0,a.yg)("li",{parentName:"ul"},"CometBFT related initialization",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Translation of an app genesis to a CometBFT genesis"))),(0,a.yg)("li",{parentName:"ul"},"Application state export into a genesis file")),(0,a.yg)("h2",{id:"genesis"},"Genesis"),(0,a.yg)("p",null,"Genutil contains the data structure that defines an application genesis.\nAn application genesis consist of a consensus genesis (g.e. CometBFT genesis) and application related genesis data."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-rc.0/x/genutil/types/genesis.go#L24-L34\n")),(0,a.yg)("p",null,"The application genesis can then be translated to the consensus engine to the right format:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-rc.0/x/genutil/types/genesis.go#L126-L136\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-rc.0/server/start.go#L397-L407\n")),(0,a.yg)("h2",{id:"client"},"Client"),(0,a.yg)("h3",{id:"cli"},"CLI"),(0,a.yg)("p",null,"The genutil commands are available under the ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis")," subcommand."),(0,a.yg)("h4",{id:"add-genesis-account"},"add-genesis-account"),(0,a.yg)("p",null,"Add a genesis account to ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis.json"),". Learn more ",(0,a.yg)("a",{parentName:"p",href:"https://docs.cosmos.network/main/run-node/run-node#adding-genesis-accounts"},"here"),"."),(0,a.yg)("h4",{id:"collect-gentxs"},"collect-gentxs"),(0,a.yg)("p",null,"Collect genesis txs and output a ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis.json")," file."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd genesis collect-gentxs\n")),(0,a.yg)("p",null,"This will create a new ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis.json"),' file that includes data from all the validators (we sometimes call it the "super genesis file" to distinguish it from single-validator genesis files).'),(0,a.yg)("h4",{id:"gentx"},"gentx"),(0,a.yg)("p",null,"Generate a genesis tx carrying a self delegation."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd genesis gentx [key_name] [amount] --chain-id [chain-id]\n")),(0,a.yg)("p",null,"This will create the genesis transaction for your new chain. Here ",(0,a.yg)("inlineCode",{parentName:"p"},"amount")," should be at least ",(0,a.yg)("inlineCode",{parentName:"p"},"1000000000stake"),".\nIf you provide too much or too little, you will encounter an error when starting a node."),(0,a.yg)("h4",{id:"migrate"},"migrate"),(0,a.yg)("p",null,"Migrate genesis to a specified target (SDK) version."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd genesis migrate [target-version]\n")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"migrate")," command is extensible and takes a ",(0,a.yg)("inlineCode",{parentName:"p"},"MigrationMap"),". This map is a mapping of target versions to genesis migrations functions.\nWhen not using the default ",(0,a.yg)("inlineCode",{parentName:"p"},"MigrationMap"),", it is recommended to still call the default ",(0,a.yg)("inlineCode",{parentName:"p"},"MigrationMap")," corresponding the SDK version of the chain and prepend/append your own genesis migrations.")),(0,a.yg)("h4",{id:"validate-genesis"},"validate-genesis"),(0,a.yg)("p",null,"Validates the genesis file at the default location or at the location passed as an argument."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd genesis validate-genesis\n")),(0,a.yg)("admonition",{type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"Validate genesis only validates if the genesis is valid at the ",(0,a.yg)("strong",{parentName:"p"},"current application binary"),". For validating a genesis from a previous version of the application, use the ",(0,a.yg)("inlineCode",{parentName:"p"},"migrate")," command to migrate the genesis to the current version.")),(0,a.yg)("h4",{id:"export"},"export"),(0,a.yg)("p",null,"Export state to genesis file."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd genesis export\n")),(0,a.yg)("p",null,"Some flags are available to customize the export:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--for-zero-height"),": export the genesis file for a chain with zero height"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--height [height]"),": export the genesis file for a chain with a given height")),(0,a.yg)("p",null,"Read the help for more information."))}d.isMDXComponent=!0}}]);