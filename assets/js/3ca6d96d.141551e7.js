"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[44263],{15680:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>u});var i=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function p(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,i)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?p(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,i,t=function(e,n){if(null==e)return{};var a,i,t={},p=Object.keys(e);for(i=0;i<p.length;i++)a=p[i],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(i=0;i<p.length;i++)a=p[i],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var s=i.createContext({}),l=function(e){var n=i.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},d=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var a=e.components,t=e.mdxType,p=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),g=l(a),c=t,u=g["".concat(s,".").concat(c)]||g[c]||m[c]||p;return a?i.createElement(u,o(o({ref:n},d),{},{components:a})):i.createElement(u,o({ref:n},d))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var p=a.length,o=new Array(p);o[0]=c;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[g]="string"==typeof e?e:t,o[1]=r;for(var l=2;l<p;l++)o[l]=a[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,a)}c.displayName="MDXCreateElement"},94923:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>p,metadata:()=>r,toc:()=>l});var i=a(58168),t=(a(96540),a(15680));const p={sidebar_position:1},o="Overview of app_di.go",r={unversionedId:"build/building-apps/app-go-v2",id:"version-0.52/build/building-apps/app-go-v2",title:"Overview of app_di.go",description:"The Cosmos SDK allows much easier wiring of an app.go thanks to runtime and app wiring.",source:"@site/cosmos-sdk_versioned_docs/version-0.52/build/building-apps/01-app-go-v2.md",sourceDirName:"build/building-apps",slug:"/build/building-apps/app-go-v2",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-apps/app-go-v2",draft:!1,tags:[],version:"0.52",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"What is runtime?",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},next:{title:"Application Mempool",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-apps/app-mempool"}},s={},l=[{value:"<code>app_config.go</code>",id:"app_configgo",level:2},{value:"Alternative formats",id:"alternative-formats",level:3},{value:"<code>app_di.go</code>",id:"app_digo",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Registering non app wiring modules",id:"registering-non-app-wiring-modules",level:3},{value:"Complete <code>app_di.go</code>",id:"complete-app_digo",level:3}],d={toc:l},g="wrapper";function m(e){let{components:n,...a}=e;return(0,t.yg)(g,(0,i.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"overview-of-app_digo"},"Overview of ",(0,t.yg)("inlineCode",{parentName:"h1"},"app_di.go")),(0,t.yg)("admonition",{title:"Synopsis",type:"note"},(0,t.yg)("p",{parentName:"admonition"},"The Cosmos SDK allows much easier wiring of an ",(0,t.yg)("inlineCode",{parentName:"p"},"app.go")," thanks to ",(0,t.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},"runtime")," and app wiring.\nLearn more about the rationale of App Wiring in ",(0,t.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/build/architecture/adr-057-app-wiring"},"ADR-057"),".")),(0,t.yg)("admonition",{title:"Pre-requisite Readings",type:"note"},(0,t.yg)("ul",{parentName:"admonition"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},"What is ",(0,t.yg)("inlineCode",{parentName:"a"},"runtime"),"?")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/packages/depinject"},"Depinject documentation")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/building-modules/depinject"},"Modules depinject-ready")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/architecture/adr-057-app-wiring"},"ADR 057: App Wiring")))),(0,t.yg)("p",null,"This section is intended to provide an overview of the ",(0,t.yg)("inlineCode",{parentName:"p"},"SimApp")," ",(0,t.yg)("inlineCode",{parentName:"p"},"app_di.go")," file with App Wiring."),(0,t.yg)("h2",{id:"app_configgo"},(0,t.yg)("inlineCode",{parentName:"h2"},"app_config.go")),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"app_config.go")," file is the single place to configure all modules parameters."),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Create the ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig")," variable:"),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_di.go#L93-L99\n")),(0,t.yg)("p",{parentName:"li"},"Where the ",(0,t.yg)("inlineCode",{parentName:"p"},"appConfig"),", combine the ",(0,t.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},"runtime")," and the modules configuration."),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go#L107-L111\n"))),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Configure the ",(0,t.yg)("inlineCode",{parentName:"p"},"runtime")," module:"),(0,t.yg)("p",{parentName:"li"},"In this configuration, the order at which the modules are defined is important.\nThey are named in the order they should be executed by the module manager."),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go#L110-L187\n"))),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Wire the other modules:"),(0,t.yg)("p",{parentName:"li"},"Next to runtime, the other (depinject-enabled) modules are wired in the ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig"),":"),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go#L196-L215\n")),(0,t.yg)("p",{parentName:"li"},"Note: the ",(0,t.yg)("inlineCode",{parentName:"p"},"tx")," isn't a module, but a configuration. It should be wired in the ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig")," as well."),(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go#L188-L195\n")))),(0,t.yg)("p",null,"See the complete ",(0,t.yg)("inlineCode",{parentName:"p"},"app_config.go")," file for ",(0,t.yg)("inlineCode",{parentName:"p"},"SimApp")," ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_config.go"},"here"),"."),(0,t.yg)("h3",{id:"alternative-formats"},"Alternative formats"),(0,t.yg)("admonition",{type:"tip"},(0,t.yg)("p",{parentName:"admonition"},"The example above shows how to create an ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig")," using Go. However, it is also possible to create an ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig")," using YAML, or JSON.",(0,t.yg)("br",{parentName:"p"}),"\n","The configuration can then be embed with ",(0,t.yg)("inlineCode",{parentName:"p"},"go:embed")," and read with ",(0,t.yg)("a",{parentName:"p",href:"https://pkg.go.dev/cosmossdk.io/core/appconfig#LoadYAML"},(0,t.yg)("inlineCode",{parentName:"a"},"appconfig.LoadYAML")),", or ",(0,t.yg)("a",{parentName:"p",href:"https://pkg.go.dev/cosmossdk.io/core/appconfig#LoadJSON"},(0,t.yg)("inlineCode",{parentName:"a"},"appconfig.LoadJSON")),", in ",(0,t.yg)("inlineCode",{parentName:"p"},"app_di.go"),"."),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",{parentName:"pre",className:"language-go"},"//go:embed app_config.yaml\nvar (\n    appConfigYaml []byte\n    appConfig = appconfig.LoadYAML(appConfigYaml)\n)\n"))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'modules:\n  - name: runtime\n    config:\n      "@type": cosmos.app.runtime.v1alpha1.Module\n      app_name: SimApp\n      begin_blockers: [staking, auth, bank]\n      end_blockers: [bank, auth, staking]\n      init_genesis: [bank, auth, staking]\n  - name: auth\n    config:\n      "@type": cosmos.auth.module.v1.Module\n      bech32_prefix: cosmos\n  - name: bank\n    config:\n      "@type": cosmos.bank.module.v1.Module\n  - name: staking\n    config:\n      "@type": cosmos.staking.module.v1.Module\n  - name: tx\n    config:\n      "@type": cosmos.tx.config.v1.Config\n')),(0,t.yg)("p",null,"A more complete example of ",(0,t.yg)("inlineCode",{parentName:"p"},"app.yaml")," can be found ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/cosmosregistry/chain-minimal/blob/mini-v050.2/app/app.yaml"},"here"),"."),(0,t.yg)("h2",{id:"app_digo"},(0,t.yg)("inlineCode",{parentName:"h2"},"app_di.go")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"app_di.go")," is the place where ",(0,t.yg)("inlineCode",{parentName:"p"},"SimApp")," is constructed. ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Inject")," facilitates that by automatically wiring the app modules and keepers, provided an application configuration ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig")," is provided. ",(0,t.yg)("inlineCode",{parentName:"p"},"SimApp")," is constructed, when calling the injected ",(0,t.yg)("inlineCode",{parentName:"p"},"*runtime.AppBuilder"),", with ",(0,t.yg)("inlineCode",{parentName:"p"},"appBuilder.Build(...)"),".",(0,t.yg)("br",{parentName:"p"}),"\n","In short ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject")," and the ",(0,t.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},(0,t.yg)("inlineCode",{parentName:"a"},"runtime")," package")," abstract the wiring of the app, and the ",(0,t.yg)("inlineCode",{parentName:"p"},"AppBuilder")," is the place where the app is constructed. ",(0,t.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/build/building-apps/runtime"},(0,t.yg)("inlineCode",{parentName:"a"},"runtime"))," takes care of registering the codecs, KV store, subspaces and instantiating ",(0,t.yg)("inlineCode",{parentName:"p"},"baseapp"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_di.go#L101-L290\n")),(0,t.yg)("admonition",{type:"warning"},(0,t.yg)("p",{parentName:"admonition"},"When using ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Inject"),", the injected types must be pointers.")),(0,t.yg)("h3",{id:"advanced-configuration"},"Advanced Configuration"),(0,t.yg)("p",null,"In advanced cases, it is possible to inject extra (module) configuration in a way that is not (yet) supported by ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig"),".",(0,t.yg)("br",{parentName:"p"}),"\n","In this case, use ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Configs")," for combining the extra configuration and ",(0,t.yg)("inlineCode",{parentName:"p"},"AppConfig"),", and ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Supply")," to providing that extra configuration.\nMore information on how work ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Configs")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"depinject.Supply")," can be found in the ",(0,t.yg)("a",{parentName:"p",href:"https://pkg.go.dev/cosmossdk.io/depinject"},(0,t.yg)("inlineCode",{parentName:"a"},"depinject")," documentation"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app_di.go#L117-L161\n")),(0,t.yg)("h3",{id:"registering-non-app-wiring-modules"},"Registering non app wiring modules"),(0,t.yg)("p",null,"It is possible to combine app wiring / depinject enabled modules with non app wiring modules.\nTo do so, use the ",(0,t.yg)("inlineCode",{parentName:"p"},"app.RegisterModules")," method to register the modules on your app, as well as ",(0,t.yg)("inlineCode",{parentName:"p"},"app.RegisterStores")," for registering the extra stores needed."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"// ....\napp.App = appBuilder.Build(db, traceStore, baseAppOptions...)\n\n// register module manually\napp.RegisterStores(storetypes.NewKVStoreKey(example.ModuleName))\napp.ExampleKeeper = examplekeeper.NewKeeper(app.appCodec, app.AccountKeeper.AddressCodec(), runtime.NewKVStoreService(app.GetKey(example.ModuleName)), authtypes.NewModuleAddress(govtypes.ModuleName).String())\nexampleAppModule := examplemodule.NewAppModule(app.ExampleKeeper)\nif err := app.RegisterModules(&exampleAppModule); err != nil {\n    panic(err)\n}\n\n// ....\n")),(0,t.yg)("admonition",{type:"warning"},(0,t.yg)("p",{parentName:"admonition"},"When using AutoCLI and combining app wiring and non app wiring modules. The AutoCLI options should be manually constructed instead of injected.\nOtherwise it will miss the non depinject modules and not register their CLI.")),(0,t.yg)("h3",{id:"complete-app_digo"},"Complete ",(0,t.yg)("inlineCode",{parentName:"h3"},"app_di.go")),(0,t.yg)("admonition",{type:"tip"},(0,t.yg)("p",{parentName:"admonition"},"Note that in the complete ",(0,t.yg)("inlineCode",{parentName:"p"},"SimApp")," ",(0,t.yg)("inlineCode",{parentName:"p"},"app_di.go")," file, testing utilities are also defined, but they could as well be defined in a separate file.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/simapp/app.go\n")))}m.isMDXComponent=!0}}]);