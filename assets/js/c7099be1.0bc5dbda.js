"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[53967],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>f});var i=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var g=i.createContext({}),c=function(e){var n=i.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(g.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,g=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),s=c(t),m=a,f=s["".concat(g,".").concat(m)]||s[m]||d[m]||o;return t?i.createElement(f,l(l({ref:n},p),{},{components:t})):i.createElement(f,l({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var r={};for(var g in n)hasOwnProperty.call(n,g)&&(r[g]=n[g]);r.originalType=e,r[s]="string"==typeof e?e:a,l[1]=r;for(var c=2;c<o;c++)l[c]=t[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(58168),a=(t(96540),t(15680));const o={sidebar_position:1},l="Confix",r={unversionedId:"build/tooling/confix",id:"version-0.52/build/tooling/confix",title:"Confix",description:"Confix is a configuration management tool that allows you to manage your configuration via CLI.",source:"@site/cosmos-sdk_versioned_docs/version-0.52/build/tooling/02-confix.md",sourceDirName:"build/tooling",slug:"/build/tooling/confix",permalink:"/dev-portal-docsite/cosmos-sdk/build/tooling/confix",draft:!1,tags:[],version:"0.52",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Cosmovisor",permalink:"/dev-portal-docsite/cosmos-sdk/build/tooling/cosmovisor"},next:{title:"hubl",permalink:"/dev-portal-docsite/cosmos-sdk/build/tooling/hubl"}},g={},c=[{value:"Installation",id:"installation",level:2},{value:"Add Config Command",id:"add-config-command",level:3},{value:"Using Confix Standalone",id:"using-confix-standalone",level:3},{value:"Usage",id:"usage",level:2},{value:"Get",id:"get",level:3},{value:"Set",id:"set",level:3},{value:"Migrate",id:"migrate",level:3},{value:"Diff",id:"diff",level:3},{value:"View",id:"view",level:3},{value:"Maintainer",id:"maintainer",level:3},{value:"Compatibility",id:"compatibility",level:3},{value:"Credits",id:"credits",level:2}],p={toc:c},s="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(s,(0,i.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"confix"},"Confix"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"Confix")," is a configuration management tool that allows you to manage your configuration via CLI."),(0,a.yg)("p",null,"It is based on the ",(0,a.yg)("a",{parentName:"p",href:"https://https://github.com/cometbft/cometbft/blob/5013bc3f4a6d64dcc2bf02ccc002ebc9881c62e4/docs/rfc/rfc-019-config-version.md"},"CometBFT RFC 019"),"."),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("h3",{id:"add-config-command"},"Add Config Command"),(0,a.yg)("p",null,"To add the confix tool, it's required to add the ",(0,a.yg)("inlineCode",{parentName:"p"},"ConfigCommand")," to your application's root command file (e.g. ",(0,a.yg)("inlineCode",{parentName:"p"},"<appd>/cmd/root.go"),")."),(0,a.yg)("p",null,"Import the ",(0,a.yg)("inlineCode",{parentName:"p"},"confixCmd")," package:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},'import "cosmossdk.io/tools/confix/cmd"\n')),(0,a.yg)("p",null,"Find the following line:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},"initRootCmd(rootCmd, moduleManager)\n")),(0,a.yg)("p",null,"After that line, add the following:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},"rootCmd.AddCommand(\n    confixcmd.ConfigCommand(),\n)\n")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ConfixCommand")," function builds the ",(0,a.yg)("inlineCode",{parentName:"p"},"config")," root command and is defined in the ",(0,a.yg)("inlineCode",{parentName:"p"},"confixCmd")," package (",(0,a.yg)("inlineCode",{parentName:"p"},"cosmossdk.io/tools/confix/cmd"),").\nAn implementation example can be found in ",(0,a.yg)("inlineCode",{parentName:"p"},"simapp"),"."),(0,a.yg)("p",null,"The command will be available as ",(0,a.yg)("inlineCode",{parentName:"p"},"simd config"),"."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"Using confix directly in the application can have less features than using it standalone.\nThis is because confix is versioned with the SDK, while ",(0,a.yg)("inlineCode",{parentName:"p"},"latest")," is the standalone version.")),(0,a.yg)("h3",{id:"using-confix-standalone"},"Using Confix Standalone"),(0,a.yg)("p",null,"To use Confix standalone, without having to add it in your application, install it with the following command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"go install cosmossdk.io/tools/confix/cmd/confix@latest\n")),(0,a.yg)("p",null,"Alternatively, for building from source, simply run ",(0,a.yg)("inlineCode",{parentName:"p"},"make confix"),". The binary will be located in ",(0,a.yg)("inlineCode",{parentName:"p"},"tools/confix"),"."),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("p",null,"Use standalone:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"confix --help\n")),(0,a.yg)("p",null,"Use in simd:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd config fix --help\n")),(0,a.yg)("h3",{id:"get"},"Get"),(0,a.yg)("p",null,"Get a configuration value, e.g.:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd config get app pruning # gets the value pruning from app.toml\nsimd config get client chain-id # gets the value chain-id from client.toml\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"confix get ~/.simapp/config/app.toml pruning # gets the value pruning from app.toml\nconfix get ~/.simapp/config/client.toml chain-id # gets the value chain-id from client.toml\n")),(0,a.yg)("h3",{id:"set"},"Set"),(0,a.yg)("p",null,"Set a configuration value, e.g.:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'simd config set app pruning "enabled" # sets the value pruning from app.toml\nsimd config set client chain-id "foo-1" # sets the value chain-id from client.toml\n')),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},'confix set ~/.simapp/config/app.toml pruning "enabled" # sets the value pruning from app.toml\nconfix set ~/.simapp/config/client.toml chain-id "foo-1" # sets the value chain-id from client.toml\n')),(0,a.yg)("h3",{id:"migrate"},"Migrate"),(0,a.yg)("p",null,"Migrate a configuration file to a new version, config type defaults to ",(0,a.yg)("inlineCode",{parentName:"p"},"app.toml"),", if you want to change it to ",(0,a.yg)("inlineCode",{parentName:"p"},"client.toml"),", please indicate it by adding the optional parameter, e.g.:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd config migrate v0.50 # migrates defaultHome/config/app.toml to the latest v0.50 config\nsimd config migrate v0.50 --client # migrates defaultHome/config/client.toml to the latest v0.50 config\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"confix migrate v0.50 ~/.simapp/config/app.toml # migrate ~/.simapp/config/app.toml to the latest v0.50 config\nconfix migrate v0.50 ~/.simapp/config/client.toml --client # migrate ~/.simapp/config/client.toml to the latest v0.50 config\n")),(0,a.yg)("h3",{id:"diff"},"Diff"),(0,a.yg)("p",null,"Get the diff between a given configuration file and the default configuration file, e.g.:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd config diff v0.47 # gets the diff between defaultHome/config/app.toml and the latest v0.47 config\nsimd config diff v0.47 --client # gets the diff between defaultHome/config/client.toml and the latest v0.47 config\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"confix diff v0.47 ~/.simapp/config/app.toml # gets the diff between ~/.simapp/config/app.toml and the latest v0.47 config\nconfix diff v0.47 ~/.simapp/config/client.toml --client # gets the diff between ~/.simapp/config/client.toml and the latest v0.47 config\n")),(0,a.yg)("h3",{id:"view"},"View"),(0,a.yg)("p",null,"View a configuration file, e.g:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"simd config view client # views the current app client config\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"confix view ~/.simapp/config/client.toml # views the current app client conf\n")),(0,a.yg)("h3",{id:"maintainer"},"Maintainer"),(0,a.yg)("p",null,"At each SDK modification of the default configuration, add the default SDK config under ",(0,a.yg)("inlineCode",{parentName:"p"},"data/vXX-app.toml"),".\nThis allows users to use the tool standalone."),(0,a.yg)("h3",{id:"compatibility"},"Compatibility"),(0,a.yg)("p",null,"The recommended standalone version is ",(0,a.yg)("inlineCode",{parentName:"p"},"latest"),", which is using the latest development version of the Confix."),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"SDK Version"),(0,a.yg)("th",{parentName:"tr",align:null},"Confix Version"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"v0.50"),(0,a.yg)("td",{parentName:"tr",align:null},"v0.1.x")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"v0.52"),(0,a.yg)("td",{parentName:"tr",align:null},"v0.2.x")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"v2"),(0,a.yg)("td",{parentName:"tr",align:null},"v0.2.x")))),(0,a.yg)("h2",{id:"credits"},"Credits"),(0,a.yg)("p",null,"This project is based on the ",(0,a.yg)("a",{parentName:"p",href:"https://https://github.com/cometbft/cometbft/blob/5013bc3f4a6d64dcc2bf02ccc002ebc9881c62e4/docs/rfc/rfc-019-config-version.md"},"CometBFT RFC 019")," and their never released own implementation of ",(0,a.yg)("a",{parentName:"p",href:"https://https://github.com/cometbft/cometbft/blob/v0.36.x/scripts/confix/confix.go"},"confix"),"."))}d.isMDXComponent=!0}}]);