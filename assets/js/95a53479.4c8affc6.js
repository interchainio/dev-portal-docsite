"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[97874],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>u});var i=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(l,".").concat(m)]||d[m]||g[m]||r;return n?i.createElement(u,o(o({ref:t},c),{},{components:n})):i.createElement(u,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},34737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(58168),a=(n(96540),n(15680));const r={title:"Handling Genesis",sidebar_label:"Handling Genesis",sidebar_position:8,slug:"/ibc/light-clients/genesis"},o="Genesis metadata",s={unversionedId:"light-clients/developer-guide/genesis",id:"version-v8.5.x/light-clients/developer-guide/genesis",title:"Handling Genesis",description:"Learn how to implement the ExportMetadata interface",source:"@site/ibc-go_versioned_docs/version-v8.5.x/03-light-clients/01-developer-guide/08-genesis.md",sourceDirName:"03-light-clients/01-developer-guide",slug:"/ibc/light-clients/genesis",permalink:"/dev-portal-docsite/ibc-go/ibc/light-clients/genesis",draft:!1,tags:[],version:"v8.5.x",sidebarPosition:8,frontMatter:{title:"Handling Genesis",sidebar_label:"Handling Genesis",sidebar_position:8,slug:"/ibc/light-clients/genesis"},sidebar:"defaultSidebar",previous:{title:"Handling Proposals",permalink:"/dev-portal-docsite/ibc-go/ibc/light-clients/proposals"},next:{title:"Setup",permalink:"/dev-portal-docsite/ibc-go/ibc/light-clients/setup"}},l={},p=[],c={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,i.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"genesis-metadata"},"Genesis metadata"),(0,a.yg)("admonition",{title:"Synopsis",type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Learn how to implement the ",(0,a.yg)("inlineCode",{parentName:"p"},"ExportMetadata")," interface")),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("h2",{parentName:"admonition",id:"pre-requisite-readings"},"Pre-requisite readings"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://docs.cosmos.network/v0.47/building-modules/genesis"},"Cosmos SDK module genesis")))),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"ClientState")," instances are provided their own isolated and namespaced client store upon initialisation. ",(0,a.yg)("inlineCode",{parentName:"p"},"ClientState")," implementations may choose to store any amount of arbitrary metadata in order to verify counterparty consensus state and perform light client updates correctly."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ExportMetadata")," method of the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v7.0.0/modules/core/exported/client.go#L47"},(0,a.yg)("inlineCode",{parentName:"a"},"ClientState")," interface")," provides light client modules with the ability to persist metadata in genesis exports."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},"ExportMetadata(clientStore sdk.KVStore) []GenesisMetadata\n")),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"ExportMetadata")," is provided the client store and returns an array of ",(0,a.yg)("inlineCode",{parentName:"p"},"GenesisMetadata"),". For maximum flexibility, ",(0,a.yg)("inlineCode",{parentName:"p"},"GenesisMetadata")," is defined as a simple interface containing two distinct ",(0,a.yg)("inlineCode",{parentName:"p"},"Key")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"Value")," accessor methods."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-go"},"type GenesisMetadata interface {\n  // return store key that contains metadata without clientID-prefix\n  GetKey() []byte\n  // returns metadata value\n  GetValue() []byte\n}\n")),(0,a.yg)("p",null,"This allows ",(0,a.yg)("inlineCode",{parentName:"p"},"ClientState")," instances to retrieve and export any number of key-value pairs which are maintained within the store in their raw ",(0,a.yg)("inlineCode",{parentName:"p"},"[]byte")," form."),(0,a.yg)("p",null,"When a chain is started with a ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis.json")," file which contains ",(0,a.yg)("inlineCode",{parentName:"p"},"ClientState")," metadata (for example, when performing manual upgrades using an exported ",(0,a.yg)("inlineCode",{parentName:"p"},"genesis.json"),") the ",(0,a.yg)("inlineCode",{parentName:"p"},"02-client")," submodule of core IBC will handle setting the key-value pairs within their respective client stores. ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v7.0.0/modules/core/02-client/genesis.go#L18-L22"},"See ",(0,a.yg)("inlineCode",{parentName:"a"},"02-client")," ",(0,a.yg)("inlineCode",{parentName:"a"},"InitGenesis")),"."),(0,a.yg)("p",null,"Please refer to the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/cosmos/ibc-go/blob/v7.0.0/modules/light-clients/07-tendermint/genesis.go#L12"},"Tendermint light client implementation")," for an example."))}g.isMDXComponent=!0}}]);