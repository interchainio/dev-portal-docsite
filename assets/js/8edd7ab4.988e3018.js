"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[2024],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>c});var o=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),g=i,c=u["".concat(s,".").concat(g)]||u[g]||m[g]||r;return t?o.createElement(c,a(a({ref:n},p),{},{components:t})):o.createElement(c,a({ref:n},p))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},51787:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=t(58168),i=(t(96540),t(15680));const r={sidebar_position:1},a="Folder Structure",l={unversionedId:"build/building-modules/structure",id:"version-0.52/build/building-modules/structure",title:"Folder Structure",description:"This document outlines the structure of Cosmos SDK modules. These ideas are meant to be applied as suggestions. Application developers are encouraged to improve upon and contribute to module structure and development design.",source:"@site/cosmos-sdk_versioned_docs/version-0.52/build/building-modules/11-structure.md",sourceDirName:"build/building-modules",slug:"/build/building-modules/structure",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-modules/structure",draft:!1,tags:[],version:"0.52",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Module Interfaces",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-modules/module-interfaces"},next:{title:"Errors",permalink:"/dev-portal-docsite/cosmos-sdk/build/building-modules/errors"}},s={},d=[{value:"Structure",id:"structure",level:2}],p={toc:d},u="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"folder-structure"},"Folder Structure"),(0,i.yg)("admonition",{title:"Synopsis",type:"note"},(0,i.yg)("p",{parentName:"admonition"},"This document outlines the structure of Cosmos SDK modules. These ideas are meant to be applied as suggestions. Application developers are encouraged to improve upon and contribute to module structure and development design."),(0,i.yg)("p",{parentName:"admonition"},"The required interface for a module is located in the module.go. Everything beyond this is suggestive.")),(0,i.yg)("h2",{id:"structure"},"Structure"),(0,i.yg)("p",null,"A typical Cosmos SDK module can be structured as follows:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"proto\n\u2514\u2500\u2500 {project_name}\n \xa0\xa0 \u2514\u2500\u2500 {module_name}\n \xa0\xa0     \u2514\u2500\u2500 {proto_version}\n \xa0\xa0  \xa0\xa0     \u251c\u2500\u2500 {module_name}.proto\n \xa0\xa0  \xa0\xa0     \u251c\u2500\u2500 genesis.proto\n \xa0\xa0  \xa0\xa0     \u251c\u2500\u2500 query.proto\n \xa0\xa0  \xa0\xa0     \u2514\u2500\u2500 tx.proto\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"{module_name}.proto"),": The module's common message type definitions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"genesis.proto"),": The module's message type definitions related to genesis state."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"query.proto"),": The module's Query service and related message type definitions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"tx.proto"),": The module's Msg service and related message type definitions.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"x/{module_name}\n\u251c\u2500\u2500 client\n\u2502\xa0\xa0 \u251c\u2500\u2500 cli\n\u2502\xa0\xa0 \u2502   \u251c\u2500\u2500 query.go\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tx.go\n\u2502\xa0\xa0 \u2514\u2500\u2500 testutil\n\u2502\xa0\xa0     \u251c\u2500\u2500 cli_test.go\n\u2502\xa0\xa0     \u2514\u2500\u2500 suite.go\n\u251c\u2500\u2500 exported\n\u2502\xa0\xa0 \u2514\u2500\u2500 exported.go\n\u251c\u2500\u2500 keeper\n\u2502\xa0\xa0 \u251c\u2500\u2500 genesis.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 grpc_query.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 hooks.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 keeper.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 keys.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 msg_server.go\n\u2502\xa0\xa0 \u2514\u2500\u2500 querier.go\n\u251c\u2500\u2500 simulation\n\u2502\xa0\xa0 \u251c\u2500\u2500 decoder.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 genesis.go\n\u2502\xa0\xa0 \u251c\u2500\u2500 operations.go\n\u2502\xa0\xa0 \u2514\u2500\u2500 params.go\n\u251c\u2500\u2500 types\n\u2502\xa0\xa0 \u251c\u2500\u2500 {module_name}.pb.go\n\u2502   \u251c\u2500\u2500 codec.go\n\u2502   \u251c\u2500\u2500 errors.go\n\u2502   \u251c\u2500\u2500 events.go\n\u2502   \u251c\u2500\u2500 events.pb.go\n\u2502   \u251c\u2500\u2500 expected_keepers.go\n\u2502   \u251c\u2500\u2500 genesis.go\n\u2502   \u251c\u2500\u2500 genesis.pb.go\n\u2502   \u251c\u2500\u2500 keys.go\n\u2502   \u251c\u2500\u2500 msgs.go\n\u2502   \u251c\u2500\u2500 params.go\n\u2502   \u251c\u2500\u2500 query.pb.go\n\u2502   \u2514\u2500\u2500 tx.pb.go\n\u251c\u2500\u2500 module.go\n\u251c\u2500\u2500 abci.go\n\u251c\u2500\u2500 autocli.go\n\u251c\u2500\u2500 depinject.go\n\u2514\u2500\u2500 README.md\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"client/"),": The module's CLI client functionality implementation and the module's CLI testing suite."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"exported/"),": The module's exported types - typically interface types. If a module relies on keepers from another module, it is expected to receive the keepers as interface contracts through the ",(0,i.yg)("inlineCode",{parentName:"li"},"expected_keepers.go")," file (see below) in order to avoid a direct dependency on the module implementing the keepers. However, these interface contracts can define methods that operate on and/or return types that are specific to the module that is implementing the keepers and this is where ",(0,i.yg)("inlineCode",{parentName:"li"},"exported/")," comes into play. The interface types that are defined in ",(0,i.yg)("inlineCode",{parentName:"li"},"exported/")," use canonical types, allowing for the module to receive the keepers as interface contracts through the ",(0,i.yg)("inlineCode",{parentName:"li"},"expected_keepers.go")," file. This pattern allows for code to remain DRY and also alleviates import cycle chaos."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"keeper/"),": The module's ",(0,i.yg)("inlineCode",{parentName:"li"},"Keeper")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"MsgServer")," implementation.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"abci.go"),": The module's ",(0,i.yg)("inlineCode",{parentName:"li"},"BeginBlocker")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"EndBlocker")," implementations (this file is only required if ",(0,i.yg)("inlineCode",{parentName:"li"},"BeginBlocker")," and/or ",(0,i.yg)("inlineCode",{parentName:"li"},"EndBlocker")," need to be defined)."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"simulation/"),": The module's ",(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/building-modules/simulator"},"simulation")," package defines functions used by the blockchain simulator application (",(0,i.yg)("inlineCode",{parentName:"li"},"simapp"),")."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"README.md"),": The module's specification documents outlining important concepts, state storage structure, and message and event type definitions. Learn more how to write module specs in the ",(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/spec/SPEC_MODULE"},"spec guidelines"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"types/"),": includes type definitions for messages, events, and genesis state, including the type definitions generated by Protocol Buffers.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"codec.go"),": The module's registry methods for interface types."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"errors.go"),": The module's sentinel errors."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"events.go"),": The module's event types and constructors."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"expected_keepers.go"),": The module's ",(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/building-modules/keeper#type-definition"},"expected keeper")," interfaces."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"genesis.go"),": The module's genesis state methods and helper functions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"keys.go"),": The module's store keys and associated helper functions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"msgs.go"),": The module's message type definitions and associated methods."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"params.go"),": The module's parameter type definitions and associated methods."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"*.pb.go"),": The module's type definitions generated by Protocol Buffers (as defined in the respective ",(0,i.yg)("inlineCode",{parentName:"li"},"*.proto")," files above)."))),(0,i.yg)("li",{parentName:"ul"},"The root directory includes the module's ",(0,i.yg)("inlineCode",{parentName:"li"},"AppModule")," implementation.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"autocli.go"),": The module ",(0,i.yg)("a",{parentName:"li",href:"https://docs.cosmos.network/main/core/autocli"},"autocli")," options."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"depinject.go"),": The module ",(0,i.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/build/building-modules/depinject#type-definition"},"depinject")," options.")))),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Note: although the above pattern is followed by most of the Cosmos SDK modules, there are some modules that don't follow this pattern. E.g ",(0,i.yg)("inlineCode",{parentName:"p"},"x/group")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"x/nft")," dont have a ",(0,i.yg)("inlineCode",{parentName:"p"},"types")," folder, instead all of the type definitions for messages, events, and genesis state are live in the root directory and the module's ",(0,i.yg)("inlineCode",{parentName:"p"},"AppModule")," implementation lives in the ",(0,i.yg)("inlineCode",{parentName:"p"},"module")," folder.")))}m.isMDXComponent=!0}}]);