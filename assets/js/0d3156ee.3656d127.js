"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[92624],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var a=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(t),c=o,y=m["".concat(l,".").concat(c)]||m[c]||g[c]||r;return t?a.createElement(y,i(i({ref:n},d),{},{components:t})):a.createElement(y,i({ref:n},d))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},46780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(58168),o=(t(96540),t(15680));const r={sidebar_position:1},i="Events",s={unversionedId:"docs/learn/advanced/events",id:"docs/learn/advanced/events",title:"Events",description:"Events are objects that contain information about the execution of the application. They are mainly used by service providers like block explorers and wallet to track the execution of various messages and index transactions.",source:"@site/cosmos-sdk/docs/learn/advanced/08-events.md",sourceDirName:"docs/learn/advanced",slug:"/docs/learn/advanced/events",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/events",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"learnSidebar",previous:{title:"Command-Line Interface",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/cli"},next:{title:"Telemetry",permalink:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/telemetry"}},l={},p=[{value:"Events",id:"events-1",level:2},{value:"Examples",id:"examples",level:3},{value:"EventManager",id:"eventmanager",level:2},{value:"Default Events",id:"default-events",level:2},{value:"Subscribing to CometBFT Events",id:"subscribing-to-cometbft-events",level:2}],d={toc:p},m="wrapper";function g(e){let{components:n,...t}=e;return(0,o.yg)(m,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"events"},"Events"),(0,o.yg)("admonition",{title:"Synopsis",type:"note"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("inlineCode",{parentName:"p"},"Events")," are objects that contain information about the execution of the application. They are mainly used by service providers like block explorers and wallet to track the execution of various messages and index transactions.")),(0,o.yg)("admonition",{title:"Pre-requisite Readings",type:"note"},(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/beginner/app-anatomy"},"Anatomy of a Cosmos SDK application")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.cometbft.com/v1.0/spec/abci/abci++_basic_concepts#events"},"CometBFT Documentation on Events")))),(0,o.yg)("h2",{id:"events-1"},"Events"),(0,o.yg)("p",null,"Events are implemented in the Cosmos SDK as an alias of the ABCI ",(0,o.yg)("inlineCode",{parentName:"p"},"Event")," type and\ntake the form of: ",(0,o.yg)("inlineCode",{parentName:"p"},"{eventType}.{attributeKey}={attributeValue}"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-protobuf",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/proto/cosmos/streaming/v1/grpc.proto#L49-L53\n")),(0,o.yg)("p",null,"An Event contains:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A ",(0,o.yg)("inlineCode",{parentName:"li"},"type")," to categorize the Event at a high-level; for example, the Cosmos SDK uses the ",(0,o.yg)("inlineCode",{parentName:"li"},'"message"')," type to filter Events by ",(0,o.yg)("inlineCode",{parentName:"li"},"Msg"),"s."),(0,o.yg)("li",{parentName:"ul"},"A list of ",(0,o.yg)("inlineCode",{parentName:"li"},"attributes")," are key-value pairs that give more information about the categorized Event. For example, for the ",(0,o.yg)("inlineCode",{parentName:"li"},'"message"')," type, we can filter Events by key-value pairs using ",(0,o.yg)("inlineCode",{parentName:"li"},"message.action={some_action}"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"message.module={some_module}")," or ",(0,o.yg)("inlineCode",{parentName:"li"},"message.sender={some_sender}"),".")),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"To parse the attribute values as strings, make sure to add ",(0,o.yg)("inlineCode",{parentName:"p"},"'")," (single quotes) around each attribute value.")),(0,o.yg)("p",null,(0,o.yg)("em",{parentName:"p"},"Typed Events")," are Protobuf-defined ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/architecture/adr-032-typed-events"},"messages")," used by the Cosmos SDK\nfor emitting and querying Events. They are defined in a ",(0,o.yg)("inlineCode",{parentName:"p"},"event.proto")," file, on a ",(0,o.yg)("strong",{parentName:"p"},"per-module basis")," and are read as ",(0,o.yg)("inlineCode",{parentName:"p"},"proto.Message"),".\n",(0,o.yg)("em",{parentName:"p"},"Legacy Events")," are defined on a ",(0,o.yg)("strong",{parentName:"p"},"per-module basis")," in the module's ",(0,o.yg)("inlineCode",{parentName:"p"},"/types/events.go")," file.\nThey are triggered from the module's Protobuf ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-modules/msg-services"},(0,o.yg)("inlineCode",{parentName:"a"},"Msg")," service"),"\nby using the ",(0,o.yg)("a",{parentName:"p",href:"#eventmanager"},(0,o.yg)("inlineCode",{parentName:"a"},"EventManager")),"."),(0,o.yg)("p",null,"In addition, each module documents its events under in the ",(0,o.yg)("inlineCode",{parentName:"p"},"Events")," sections of its specs (x/{moduleName}/",(0,o.yg)("inlineCode",{parentName:"p"},"README.md"),")."),(0,o.yg)("p",null,"Lastly, Events are returned to the underlying consensus engine in the response of the following ABCI messages:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/baseapp#beginblock"},(0,o.yg)("inlineCode",{parentName:"a"},"BeginBlock"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/baseapp#endblock"},(0,o.yg)("inlineCode",{parentName:"a"},"EndBlock"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/baseapp#checktx"},(0,o.yg)("inlineCode",{parentName:"a"},"CheckTx"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/baseapp#transaction-execution"},(0,o.yg)("inlineCode",{parentName:"a"},"Transaction Execution")))),(0,o.yg)("h3",{id:"examples"},"Examples"),(0,o.yg)("p",null,"The following examples show how to query Events using the Cosmos SDK."),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Event"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"tx.height=23")),(0,o.yg)("td",{parentName:"tr",align:null},"Query all transactions at height 23")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"message.action='/cosmos.bank.v1beta1.Msg/Send'")),(0,o.yg)("td",{parentName:"tr",align:null},"Query all transactions containing an x/bank ",(0,o.yg)("inlineCode",{parentName:"td"},"Send")," ",(0,o.yg)("a",{parentName:"td",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-modules/msg-services"},"Service ",(0,o.yg)("inlineCode",{parentName:"a"},"Msg")),". Note the ",(0,o.yg)("inlineCode",{parentName:"td"},"'"),"s around the value.")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"message.module='bank'")),(0,o.yg)("td",{parentName:"tr",align:null},"Query all transactions containing messages from the x/bank module. Note the ",(0,o.yg)("inlineCode",{parentName:"td"},"'"),"s around the value.")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"create_validator.validator='cosmosval1...'")),(0,o.yg)("td",{parentName:"tr",align:null},"x/staking-specific Event, see ",(0,o.yg)("a",{parentName:"td",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/modules/staking/"},"x/staking SPEC"),".")))),(0,o.yg)("h2",{id:"eventmanager"},"EventManager"),(0,o.yg)("p",null,"In Cosmos SDK applications, Events are managed by an abstraction called the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager"),".\nInternally, the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager")," tracks a list of Events for the entire execution flow of ",(0,o.yg)("inlineCode",{parentName:"p"},"FinalizeBlock"),"\n(i.e. transaction execution, ",(0,o.yg)("inlineCode",{parentName:"p"},"BeginBlock"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"EndBlock"),")."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/types/events.go#L18-L25\n")),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager")," comes with a set of useful methods to manage Events. The method\nthat is used most by module and application developers is ",(0,o.yg)("inlineCode",{parentName:"p"},"EmitTypedEvent")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"EmitEvent")," that tracks\nan Event in the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/types/events.go#L62-L86\n")),(0,o.yg)("p",null,"Module developers should handle Event emission via the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager#EmitTypedEvent")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager#EmitEvent")," in each\nmessage ",(0,o.yg)("inlineCode",{parentName:"p"},"Handler")," and in each ",(0,o.yg)("inlineCode",{parentName:"p"},"BeginBlock"),"/",(0,o.yg)("inlineCode",{parentName:"p"},"EndBlock")," handler.\nThe ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager")," is accessible via the event service, present in the ",(0,o.yg)("inlineCode",{parentName:"p"},"Environment")," struct.\nThis event service is a ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/advanced/core"},"core service")," available to all modules."),(0,o.yg)("p",null,"Events can be emitted like this using the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventService"),":"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Typed events:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/x/group/keeper/msg_server.go#L94-L96\n")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Legacy events:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/cosmos/cosmos-sdk/blob/v0.52.0-beta.2/x/gov/keeper/vote.go#L91-L95\n")),(0,o.yg)("p",null,"See the ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/build/building-modules/msg-services"},(0,o.yg)("inlineCode",{parentName:"a"},"Msg")," services")," concept doc for a more detailed\nview on how to typically implement Events and use the ",(0,o.yg)("inlineCode",{parentName:"p"},"EventManager")," in modules."),(0,o.yg)("h2",{id:"default-events"},"Default Events"),(0,o.yg)("p",null,"There are a few events that are automatically emitted for all messages, directly from ",(0,o.yg)("inlineCode",{parentName:"p"},"baseapp"),"."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"message.action"),": The name of the message type."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"message.sender"),": The address of the message signer."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"message.module"),": The name of the module that emitted the message.")),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"The module name is assumed by ",(0,o.yg)("inlineCode",{parentName:"p"},"baseapp")," to be the second element of the message route: ",(0,o.yg)("inlineCode",{parentName:"p"},'"cosmos.bank.v1beta1.MsgSend" -> "bank"'),".\nIn case a module does not follow the standard message path, (e.g. IBC), it is advised to keep emitting the module name event.\n",(0,o.yg)("inlineCode",{parentName:"p"},"Baseapp")," only emits that event if the module have not already done so.")),(0,o.yg)("h2",{id:"subscribing-to-cometbft-events"},"Subscribing to CometBFT Events"),(0,o.yg)("p",null,"You can use CometBFT's ",(0,o.yg)("a",{parentName:"p",href:"https://docs.cometbft.com/v1.0/explanation/core/subscription"},"Websocket")," to subscribe to Events by calling the ",(0,o.yg)("inlineCode",{parentName:"p"},"subscribe")," RPC method:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "method": "subscribe",\n  "id": "0",\n  "params": {\n    "query": "tm.event=\'eventCategory\' AND eventType.eventAttribute=\'attributeValue\'"\n  }\n}\n')),(0,o.yg)("p",null,"The main ",(0,o.yg)("inlineCode",{parentName:"p"},"eventCategory")," you can subscribe to are:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"NewBlock"),": Contains Events triggered during ",(0,o.yg)("inlineCode",{parentName:"li"},"BeginBlock")," and ",(0,o.yg)("inlineCode",{parentName:"li"},"EndBlock"),"."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"Tx"),": Contains Events triggered during ",(0,o.yg)("inlineCode",{parentName:"li"},"DeliverTx")," (i.e. transaction processing)."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"ValidatorSetUpdates"),": Contains validator set updates for the block.")),(0,o.yg)("p",null,"These Events are triggered from the ",(0,o.yg)("inlineCode",{parentName:"p"},"state")," package after a block is committed. You can get the\nfull list of Event categories ",(0,o.yg)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/cometbft/cometbft/types#pkg-constants"},"on the CometBFT Go documentation"),"."),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"type")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"attribute")," value of the ",(0,o.yg)("inlineCode",{parentName:"p"},"query")," allow you to filter the specific Event you are looking for. For example, a ",(0,o.yg)("inlineCode",{parentName:"p"},"Mint")," transaction triggers an Event of type ",(0,o.yg)("inlineCode",{parentName:"p"},"EventMint")," and has an ",(0,o.yg)("inlineCode",{parentName:"p"},"Id")," and an ",(0,o.yg)("inlineCode",{parentName:"p"},"Owner")," as ",(0,o.yg)("inlineCode",{parentName:"p"},"attributes")," (as defined in the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-alpha.0/proto/cosmos/nft/v1beta1/event.proto#L21-L31"},(0,o.yg)("inlineCode",{parentName:"a"},"events.proto")," file of the ",(0,o.yg)("inlineCode",{parentName:"a"},"NFT")," module"),")."),(0,o.yg)("p",null,"Subscribing to this Event would be done like so:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "method": "subscribe",\n  "id": "0",\n  "params": {\n    "query": "tm.event=\'Tx\' AND mint.owner=\'ownerAddress\'"\n  }\n}\n')),(0,o.yg)("p",null,"where ",(0,o.yg)("inlineCode",{parentName:"p"},"ownerAddress")," is an address following the ",(0,o.yg)("a",{parentName:"p",href:"/dev-portal-docsite/cosmos-sdk/next/docs/learn/beginner/accounts#addresses"},(0,o.yg)("inlineCode",{parentName:"a"},"AccAddress"))," format."),(0,o.yg)("p",null,"The same way can be used to subscribe to ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/v0.50.0-alpha.0/x/bank/types/events.go"},"legacy events"),"."))}g.isMDXComponent=!0}}]);