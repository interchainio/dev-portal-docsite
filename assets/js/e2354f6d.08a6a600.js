"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[87582],{15680:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>u});var r=a(96540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=r.createContext({}),p=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=t,u=m["".concat(l,".").concat(c)]||m[c]||g[c]||o;return a?r.createElement(u,s(s({ref:n},d),{},{components:a})):r.createElement(u,s({ref:n},d))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:t,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},73573:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(58168),t=(a(96540),a(15680));const o={title:"Params",sidebar_label:"Params",sidebar_position:7,slug:"/apps/transfer/ics20-v1/params"},s=void 0,i={unversionedId:"docs/apps/transfer/ICS20-v1/params",id:"docs/apps/transfer/ICS20-v1/params",title:"Params",description:"This document is relevant only for fungible token transfers over channels on v1 of the ICS-20 protocol.",source:"@site/ibc-go/docs/02-apps/01-transfer/10-ICS20-v1/07-params.md",sourceDirName:"docs/02-apps/01-transfer/10-ICS20-v1",slug:"/apps/transfer/ics20-v1/params",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/params",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Params",sidebar_label:"Params",sidebar_position:7,slug:"/apps/transfer/ics20-v1/params"},sidebar:"defaultSidebar",previous:{title:"Metrics",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/metrics"},next:{title:"Authorizations",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/authorizations"}},l={},p=[{value:"<code>SendEnabled</code>",id:"sendenabled",level:2},{value:"<code>ReceiveEnabled</code>",id:"receiveenabled",level:2},{value:"Queries",id:"queries",level:2},{value:"Changing Parameters",id:"changing-parameters",level:2}],d={toc:p},m="wrapper";function g(e){let{components:n,...a}=e;return(0,t.yg)(m,(0,r.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("admonition",{type:"warning"},(0,t.yg)("p",{parentName:"admonition"},"This document is relevant only for fungible token transfers over channels on v1 of the ICS-20 protocol.")),(0,t.yg)("h1",{id:"parameters"},"Parameters"),(0,t.yg)("p",null,"The IBC transfer application module contains the following parameters:"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Type"),(0,t.yg)("th",{parentName:"tr",align:null},"Default Value"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"SendEnabled")),(0,t.yg)("td",{parentName:"tr",align:null},"bool"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"true"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"ReceiveEnabled")),(0,t.yg)("td",{parentName:"tr",align:null},"bool"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"true"))))),(0,t.yg)("p",null,"The IBC transfer module stores its parameters in its keeper with the prefix of ",(0,t.yg)("inlineCode",{parentName:"p"},"0x03"),"."),(0,t.yg)("h2",{id:"sendenabled"},(0,t.yg)("inlineCode",{parentName:"h2"},"SendEnabled")),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"SendEnabled")," parameter controls send cross-chain transfer capabilities for all fungible tokens."),(0,t.yg)("p",null,"To prevent a single token from being transferred from the chain, set the ",(0,t.yg)("inlineCode",{parentName:"p"},"SendEnabled")," parameter to ",(0,t.yg)("inlineCode",{parentName:"p"},"true")," and then, depending on the Cosmos SDK version, do one of the following:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"For Cosmos SDK v0.46.x or earlier, set the bank module's ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/blob/release/v0.46.x/x/bank/spec/05_params.md#sendenabled"},(0,t.yg)("inlineCode",{parentName:"a"},"SendEnabled")," parameter")," for the denomination to ",(0,t.yg)("inlineCode",{parentName:"li"},"false"),"."),(0,t.yg)("li",{parentName:"ul"},"For Cosmos SDK versions above v0.46.x, set the bank module's ",(0,t.yg)("inlineCode",{parentName:"li"},"SendEnabled")," entry for the denomination to ",(0,t.yg)("inlineCode",{parentName:"li"},"false")," using ",(0,t.yg)("inlineCode",{parentName:"li"},"MsgSetSendEnabled")," as a governance proposal.")),(0,t.yg)("admonition",{type:"warning"},(0,t.yg)("p",{parentName:"admonition"},"Doing so will prevent the token from being transferred between any accounts in the blockchain.")),(0,t.yg)("h2",{id:"receiveenabled"},(0,t.yg)("inlineCode",{parentName:"h2"},"ReceiveEnabled")),(0,t.yg)("p",null,"The transfers enabled parameter controls receive cross-chain transfer capabilities for all fungible tokens."),(0,t.yg)("p",null,"To prevent a single token from being transferred to the chain, set the ",(0,t.yg)("inlineCode",{parentName:"p"},"ReceiveEnabled")," parameter to ",(0,t.yg)("inlineCode",{parentName:"p"},"true")," and then, depending on the Cosmos SDK version, do one of the following:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"For Cosmos SDK v0.46.x or earlier, set the bank module's ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/blob/release/v0.46.x/x/bank/spec/05_params.md#sendenabled"},(0,t.yg)("inlineCode",{parentName:"a"},"SendEnabled")," parameter")," for the denomination to ",(0,t.yg)("inlineCode",{parentName:"li"},"false"),"."),(0,t.yg)("li",{parentName:"ul"},"For Cosmos SDK versions above v0.46.x, set the bank module's ",(0,t.yg)("inlineCode",{parentName:"li"},"SendEnabled")," entry for the denomination to ",(0,t.yg)("inlineCode",{parentName:"li"},"false")," using ",(0,t.yg)("inlineCode",{parentName:"li"},"MsgSetSendEnabled")," as a governance proposal.")),(0,t.yg)("admonition",{type:"warning"},(0,t.yg)("p",{parentName:"admonition"},"Doing so will prevent the token from being transferred between any accounts in the blockchain.")),(0,t.yg)("h2",{id:"queries"},"Queries"),(0,t.yg)("p",null,"Current parameter values can be queried via a query message."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-protobuf"},"// proto/ibc/applications/transfer/v1/query.proto\n\n// QueryParamsRequest is the request type for the Query/Params RPC method.\nmessage QueryParamsRequest {}\n\n// QueryParamsResponse is the response type for the Query/Params RPC method.\nmessage QueryParamsResponse {\n  // params defines the parameters of the module.\n  Params params = 1;\n}\n")),(0,t.yg)("p",null,"To execute the query in ",(0,t.yg)("inlineCode",{parentName:"p"},"simd"),", you use the following command:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"simd query ibc-transfer params\n")),(0,t.yg)("h2",{id:"changing-parameters"},"Changing Parameters"),(0,t.yg)("p",null,"To change the parameter values, you must make a governance proposal that executes the ",(0,t.yg)("inlineCode",{parentName:"p"},"MsgUpdateParams")," message."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-protobuf"},"// proto/ibc/applications/transfer/v1/tx.proto\n\n// MsgUpdateParams is the Msg/UpdateParams request type.\nmessage MsgUpdateParams {\n  // signer address (it may be the address that controls the module, which defaults to x/gov unless overwritten).\n  string signer = 1;\n\n  // params defines the transfer parameters to update.\n  //\n  // NOTE: All parameters must be supplied.\n  Params params = 2 [(gogoproto.nullable) = false];\n}\n\n// MsgUpdateParamsResponse defines the response structure for executing a\n// MsgUpdateParams message.\nmessage MsgUpdateParamsResponse {}\n")))}g.isMDXComponent=!0}}]);