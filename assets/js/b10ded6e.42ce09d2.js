"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[97312],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=r,y=d["".concat(l,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},77404:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(58168),r=(n(96540),n(15680));const o={title:"IBC Transfers",sidebar_label:"IBC Transfers",slug:"/demo/ibc"},i="IBC Demo",s={unversionedId:"demos/ibc-transfer-demo",id:"version-v0.50.x/demos/ibc-transfer-demo",title:"IBC Transfers",description:'In this tutorial, we\'ll create and interact with a new Interchain blockchain called "rollchain", with the token denomination "uroll". This chain has tokenfactory and Proof of Authority, but we\'ll disable cosmwasm.',source:"@site/onboarding_versioned_docs/version-v0.50.x/03-demos/01-ibc-transfer-demo.md",sourceDirName:"03-demos",slug:"/demo/ibc",permalink:"/dev-portal-docsite/onboarding/demo/ibc",draft:!1,tags:[],version:"v0.50.x",sidebarPosition:1,frontMatter:{title:"IBC Transfers",sidebar_label:"IBC Transfers",slug:"/demo/ibc"},sidebar:"defaultSidebar",previous:{title:"IBC Contract (Part 3)",permalink:"/dev-portal-docsite/onboarding/build/name-service-ibc-contract"},next:{title:"CosmWasm NFTs",permalink:"/dev-portal-docsite/onboarding/demo/cw-nft"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create your chain",id:"create-your-chain",level:2},{value:"Spin up an IBC testnet",id:"spin-up-an-ibc-testnet",level:2},{value:"Send a Transaction",id:"send-a-transaction",level:2},{value:"Send an IBC transaction",id:"send-an-ibc-transaction",level:2},{value:"(optional) Push to GitHub",id:"optional-push-to-github",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"ibc-demo"},"IBC Demo"),(0,r.yg)("p",null,'In this tutorial, we\'ll create and interact with a new Interchain blockchain called "rollchain", with the token denomination "uroll". This chain has tokenfactory and Proof of Authority, but we\'ll disable cosmwasm.'),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/dev-portal-docsite/onboarding/install/system-setup"},"System Setup")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/dev-portal-docsite/onboarding/install/install-spawn"},"Install Spawn"))),(0,r.yg)("h2",{id:"create-your-chain"},"Create your chain"),(0,r.yg)("p",null,"Create your chain using the spawn command line tool. Change the ",(0,r.yg)("inlineCode",{parentName:"p"},"GITHUB_USERNAME")," to your github username.\nIf you do not have a github, leaving it as default is fine."),(0,r.yg)("p",null,"Create a ",(0,r.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Proof_of_authority"},"Proof of Authority")," network to focus on the application logic rather than worry about the security model. This is a great starting point for new chains."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"GITHUB_USERNAME=rollchains\n\n# If the `--consensus` or `--disabled` flags are not present,\n# a selector UI will appear in your terminal to see all options.\nspawn new rollchain \\\n--consensus=proof-of-authority \\\n--bech32=roll \\\n--denom=uroll \\\n--bin=rolld \\\n--disabled=cosmwasm,block-explorer \\\n--org=${GITHUB_USERNAME}\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("em",{parentName:"p"},"NOTE:")," ",(0,r.yg)("inlineCode",{parentName:"p"},"spawn")," creates a ready to use repository complete with ",(0,r.yg)("inlineCode",{parentName:"p"},"git")," and GitHub CI. It can be quickly pushed to a new repository getting you and your team up and running quickly.")),(0,r.yg)("h2",{id:"spin-up-an-ibc-testnet"},"Spin up an IBC testnet"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"chains/testnet.json")," file contains the configuration for the testnet. It is a simple JSON file that contains the chain configurations for the testnet. By default it starts 2 networks, configures a relayer, and connects the two chains via IBC."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd rollchain\n\n# Starts 2 networks for the IBC testnet at http://127.0.0.1:8080.\n# - Builds the docker image of your chain\n# - Launches a testnet with IBC automatically connected and relayed\n#\n# Note: you can run a single node, non IBC testnet, with `make sh-testnet`.\nmake testnet\n")),(0,r.yg)("h2",{id:"send-a-transaction"},"Send a Transaction"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'# list the keys that have been provisioned with funds at launch\nrolld keys list\n\n# send a transaction from one account to another\nrolld tx bank send acc0 $(rolld keys show acc1 -a) 1337uroll --chain-id=localchain-1\n\n# enter "y" to confirm the transaction\n# then query your balances for proof the transaction executed successfully\nrolld q bank balances $(rolld keys show acc1 -a)\n')),(0,r.yg)("h2",{id:"send-an-ibc-transaction"},"Send an IBC transaction"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# submit a cross chain transfer from acc0 to the other address\nrolld tx ibc-transfer transfer transfer channel-0 cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr 7uroll --from=acc0 --chain-id=localchain-1 --yes\n\n# Query the other side to confirm it went through\nsleep 10\n\n# Interact with the other chain without having to install the binary\n# - Endpoints found at: GET http://127.0.0.1:8080/info\n# - make get-localic\nlocal-ic interact localcosmos-1 query 'bank balances cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr'\n")),(0,r.yg)("h2",{id:"optional-push-to-github"},"(optional) Push to GitHub"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Create a new repository on GitHub from the gh cli\ngh repo create rollchain --source=. --remote=upstream --push --private\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"You can also push it the old fashioned way with ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/new"},"https://github.com/new"))),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"In this tutorial, you configured a new custom chain, launched a testnet for it, tested a cross chain token transfer, and confirmed it was successful. This tutorial demonstrates just how easy it is to create a new Interchain blockchain from scratch with spawn."))}p.isMDXComponent=!0}}]);