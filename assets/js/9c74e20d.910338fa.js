"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[96207],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>m});var n=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,m=u["".concat(s,".").concat(d)]||u[d]||g[d]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},21621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(58168),i=(r(96540),r(15680));const a={title:"Name Service",sidebar_label:"Application Logic",sidebar_position:3,slug:"/build/name-service-application"},o="Save Storage Structure",l={unversionedId:"build-your-application/application-logic",id:"version-v0.50.x/build-your-application/application-logic",title:"Name Service",description:"You now need to set the data structure in the keeper to store the wallet to name pair. Keepers are where the data is stored for future use and handle the business logic.",source:"@site/onboarding_versioned_docs/version-v0.50.x/02-build-your-application/03-application-logic.md",sourceDirName:"02-build-your-application",slug:"/build/name-service-application",permalink:"/dev-portal-docsite/onboarding/build/name-service-application",draft:!1,tags:[],version:"v0.50.x",sidebarPosition:3,frontMatter:{title:"Name Service",sidebar_label:"Application Logic",sidebar_position:3,slug:"/build/name-service-application"},sidebar:"defaultSidebar",previous:{title:"Set Structure",permalink:"/dev-portal-docsite/onboarding/build/name-service-structure"},next:{title:"Configure Client",permalink:"/dev-portal-docsite/onboarding/build/name-service-client"}},s={},c=[{value:"Application Logic",id:"application-logic",level:2}],p={toc:c},u="wrapper";function g(e){let{components:t,...r}=e;return(0,i.yg)(u,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"save-storage-structure"},"Save Storage Structure"),(0,i.yg)("p",null,"You now need to set the data structure in the keeper to store the wallet to name pair. Keepers are where the data is stored for future use and handle the business logic.\nThink of it like a box where you store your data and the methods used to modify this data. It is self contained and only gets further access if you allow the keeper to do so (shown in ",(0,i.yg)("a",{parentName:"p",href:"/dev-portal-docsite/onboarding/build/name-service-ibc-module"},"part 2"),")."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-go",metastring:'title="x/nameservice/keeper/keeper.go"',title:'"x/nameservice/keeper/keeper.go"'},'\ntype Keeper struct {\n    ...\n    // highlight-next-line\n    NameMapping collections.Map[string, string]\n}\n\n...\n\nfunc NewKeeper() Keeper {\n  ...\n\n  k := Keeper{\n    ...\n    // highlight-start\n    NameMapping: collections.NewMap(sb, collections.NewPrefix(1),\n        "name_mapping", collections.StringKey, collections.StringValue,\n    ),\n    // highlight-end\n  }\n\n}\n')),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"application-logic"},"Application Logic"),(0,i.yg)("p",null,"Update the msg_server logic to set the name upon request from a user."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-go",metastring:'title="x/nameservice/keeper/msg_server.go"',title:'"x/nameservice/keeper/msg_server.go"'},"func (ms msgServer) SetServiceName(ctx context.Context, msg *types.MsgSetServiceName) (*types.MsgSetServiceNameResponse, error) {\n    // highlight-start\n    if err := ms.k.NameMapping.Set(ctx, msg.Sender, msg.Name); err != nil {\n        return nil, err\n    }\n\n    return &types.MsgSetServiceNameResponse{}, nil\n    // highlight-end\n}\n")),(0,i.yg)("p",null,"and also for the query_server to retrieve the name."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-go",metastring:'title="x/nameservice/keeper/query_server.go"',title:'"x/nameservice/keeper/query_server.go"'},"func (k Querier) ResolveName(goCtx context.Context, req *types.QueryResolveNameRequest) (*types.QueryResolveNameResponse, error) {\n    // highlight-start\n    v, err := k.Keeper.NameMapping.Get(goCtx, req.Wallet)\n    if err != nil {\n        return nil, err\n    }\n\n    return &types.QueryResolveNameResponse{\n        Name: v,\n    }, nil\n    // highlight-end\n}\n")),(0,i.yg)("hr",null))}g.isMDXComponent=!0}}]);