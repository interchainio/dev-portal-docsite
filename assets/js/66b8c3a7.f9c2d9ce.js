"use strict";(self.webpackChunkdev_portal_docsite=self.webpackChunkdev_portal_docsite||[]).push([[53603],{15680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(r),d=a,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[f]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},33193:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(58168),a=(r(96540),r(15680));const o={title:"State",sidebar_label:"State",sidebar_position:2,slug:"/apps/transfer/ics20-v1/state"},i=void 0,s={unversionedId:"docs/apps/transfer/ICS20-v1/state",id:"docs/apps/transfer/ICS20-v1/state",title:"State",description:"This document is relevant only for fungible token transfers over channels on v1 of the ICS-20 protocol.",source:"@site/ibc-go/docs/02-apps/01-transfer/10-ICS20-v1/02-state.md",sourceDirName:"docs/02-apps/01-transfer/10-ICS20-v1",slug:"/apps/transfer/ics20-v1/state",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/state",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"State",sidebar_label:"State",sidebar_position:2,slug:"/apps/transfer/ics20-v1/state"},sidebar:"defaultSidebar",previous:{title:"Overview",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/overview"},next:{title:"State Transitions",permalink:"/dev-portal-docsite/ibc-go/next/apps/transfer/ics20-v1/state-transitions"}},c={},l=[],p={toc:l},f="wrapper";function u(e){let{components:t,...r}=e;return(0,a.yg)(f,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("admonition",{type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"This document is relevant only for fungible token transfers over channels on v1 of the ICS-20 protocol.")),(0,a.yg)("h1",{id:"state"},"State"),(0,a.yg)("p",null,"The IBC transfer application module keeps state of the port to which the module is binded and the denomination trace information as outlined in ",(0,a.yg)("a",{parentName:"p",href:"/ibc-go/architecture/adr-001-coin-source-tracing"},"ADR 001"),"."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Port"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"0x01 -> ProtocolBuffer(string)")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"DenomTrace"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"0x02 | []bytes(traceHash) -> ProtocolBuffer(DenomTrace)"))))}u.isMDXComponent=!0}}]);